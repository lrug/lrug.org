{
  "Matt Swanson": [
    {
      "title": "StimulusJS: Modest JS for the HTML you have",
      "author": "Matt Swanson",
      "author_link": "https://twitter.com/_swanson",
      "coverage": "{::coverage year=\"2020\" month=\"september\" talk=\"stimulusjs-modest-js-for-the-html-you-have\" /}",
      "summary": "An overview of [StimulusJS](https://stimulusjs.org) (a small framework from Basecamp) and\ndiscussion on when you might (or might not!) want to use it",
      "year": "2020",
      "month": "september"
    }
  ],
  "Duncan Brown": [
    {
      "title": "Wizards without magic",
      "author": "Duncan Brown",
      "author_link": "https://github.com/duncanjbrown",
      "coverage": "{::coverage year=\"2020\" month=\"september\" talk=\"wizards-without-magic\" /}",
      "summary": "Multi-step forms (a.k.a wizards) are fiddly to build and difficult to\ntest. (And not just in Rails). Why is that, and how can we make them\nbetter?",
      "year": "2020",
      "month": "september"
    },
    {
      "title": "Mock objects: delicious and addictive",
      "author": "Duncan Brown",
      "author_link": "https://twitter.com/duncanjbrown",
      "coverage": null,
      "summary": "You must mock, but where do you begin? Where do you end? And how do you know > when to stop? A cautionary tale. I will talk about the mocking library\n[stripe-ruby-mock](https://github.com/rebelidealist/stripe-ruby-mock).",
      "year": "2017",
      "month": "november"
    }
  ],
  "Dan Moore": [
    {
      "title": "JWTs - what Rails developers need to know",
      "author": "Dan Moore",
      "author_link": "https://twitter.com/mooreds",
      "coverage": "{::coverage year=\"2020\" month=\"october\" talk=\"jwts-what-rails-developers-need-to-know\" /}",
      "summary": "What is a JSON Web Token (JWT) and why do you care? JWTs\nare a stateless, standardized way to represent user data. This talk will\ndiscuss why JWTs matter and the nuts and bolts of JWTs. We’ll also discuss\nhow you might use a JWT in your Rails or Ruby application.",
      "year": "2020",
      "month": "october"
    }
  ],
  "Michael Mazour": [
    {
      "title": "Getting Past the Tech Test",
      "author": "Michael Mazour",
      "author_link": "https://www.linkedin.com/in/mmazour/",
      "coverage": "{::coverage year=\"2020\" month=\"october\" talk=\"getting-past-the-tech-test\" /}",
      "summary": "Sometimes people have great backgrounds and great skills, but have trouble\ngetting hired because they didn't approach the tech test the way the\ncompany wanted. As someone who reviews a lot of tech tests at work, I'm\ngoing to explain some of the unwritten rules and expectations that you\nmight not know if you've been out of circulation or are just entering the\njob market, and help you level up your tech test game.",
      "year": "2020",
      "month": "october"
    }
  ],
  "Peter Bell": [
    {
      "title": "Comparing the speed and elegance of different computer languages using a Hamiltonian curve algorithm as the comparator",
      "author": "Peter Bell",
      "author_link": "https://github.com/trapeze-bell-peter",
      "coverage": "{::coverage year=\"2020\" month=\"may\" talk=\"comparing-the-speed-and-elegance-of-different-computer-languages\" /}",
      "summary": "My company (Trapeze) specialises in public transport including schedule\noptimisation. Finding Hamiltonian curves is a sub-problem to the\ntravelling salesman problem and of the general problem of optimising\npickup and drop-offs in demand responsive public transport. This talk\nwill compare implementing a Hamiltonian curve finder in a number of\ndifferent languages. The talk looks both at the speed of the language\nand the elegance. For Ruby, I compare a couple of different\nimplementations. Other languages that are compared are Elixir, Go,\nJavascript, Java, C++, C# and Python.\nThe source code is in a public Github repository details of which I will\nprovide as part of my talk",
      "year": "2020",
      "month": "may"
    }
  ],
  "Sam Joseph": [
    {
      "title": "Debugging Ruby HTTP Library Surprises",
      "author": "Sam Joseph",
      "author_link": "http://github.com/tansaku",
      "coverage": "{::coverage year=\"2020\" month=\"may\" talk=\"debugging-ruby-http-library-surprises\" /}",
      "summary": "Some folks prefer 'puts' to debugging with something like\npry-byebug, but I'm a huge fan of debuggers, particularly stepping\nthrough my own code and the code of the many libraries we all rely on.\nIn combination with `bundle open` to insert breakpoints into the code of\ngems being used in your stack, debugging can expose really tricky\ndependency bugs, as I aim to demonstrate with one that I found in the\nway different ruby HTTP libraries can interact.",
      "year": "2020",
      "month": "may"
    },
    {
      "title": "LEARNING HOW TO LEARN RUBY (and rails, and sinatra, and ...)",
      "author": "Sam Joseph",
      "author_link": "https://github.com/tansaku",
      "coverage": null,
      "summary": "At Makers Academy we coach students through the process of learning\nRuby, Sinatra, Rails, JavaScript, JQuery and Angular over the course of\n12 weeks.  Students range in age from 18 to 60, although the majority\nare in their late 20s or early 30s, already have university degrees\n(often a humanities subject) and have spent 5+ years in the workplace\ndoing sales, marketing, design, management or some other relatively\nnon-technical role.  The majority of students have also had almost no\nprogramming experience prior to their preparation for the interview and\nselection process that they must go through to get on the course.  In\nthis talk I will explore what makes a 12 week intensive bootcamp tick,\nand the particular challenges the students face with learning Ruby and\nJavaScript.",
      "year": "2015",
      "month": "july"
    },
    {
      "title": "Festive `CodeWarsJam`",
      "author": "Sam Joseph",
      "author_link": "https://github.com/tansaku",
      "coverage": "{::coverage year=\"2015\" month=\"december\" talk=\"festive-codewarsjam\" /}",
      "summary": "A CodeWarsJam is a session where small teams of coders work on the same coding\nproblem together.  The problems are usually relatively simple and can be\nreviewed as a group every 20 minutes or so.  Recently at\n[MakersAcademy](http://www.makersacademy.com/) we've had great fun with\nCodeWarsJams, where we take coding kata from [http://codewars.com](http://codewars.com)\nand use them to run a CodeWarsJam.  CodeWarsJam is great because when you\nsolve a problem you get to see all the other variant solutions that others\nhave coded, sorted by popularity.  Come join the festive coding fun as LRUG's\nfirst CodeWarsJam!",
      "year": "2015",
      "month": "december"
    }
  ],
  "Stuart Harrison": [
    {
      "title": "I got an email from the Government the other day",
      "author": "Stuart Harrison",
      "author_link": "https://twitter.com/pezholio",
      "coverage": null,
      "summary": "Email has been around for a long time, predating even the Internet, and\ndespite the best efforts of big tech to monopolise our communications,\nit's still the most popular way to for people to communicate online.\nThis ubiquity means it's a really easy wayf or Government to keep in\ntouch with us, but email is a tricky thing to manage, running\nmailservers can be a faff, and email as a service solutions can be\nexpensive. In this talk I'll go through a potted history of email, talk\nabout a tool that the Government Digital Service have developed to make\nemail easier for goverment agencies, and a Ruby gem I've build to make\nit even easier for Rails devs.",
      "year": "2020",
      "month": "march"
    }
  ],
  "Alex Balhatchet": [
    {
      "title": "My first Rails bug report",
      "author": "Alex Balhatchet",
      "author_link": "https://twitter.com/kaokun",
      "coverage": null,
      "summary": "Story time! Here's the bug I found, how we determined it was a bug in\nRails 6, how we dealt with it including working around it and submitting\nthe bug report, and finally getting to remove our workaround once the\nbug was fixed and the new Rails was installed :)",
      "year": "2020",
      "month": "march"
    }
  ],
  "James Hand": [
    {
      "title": "Tech for good with Ruby on Rails",
      "author": "James Hand",
      "author_link": "https://www.linkedin.com/in/jameshand-uk/",
      "coverage": null,
      "summary": "Giki Social Enterprise uses Ruby on Rails to help people live\nsustainably. We'll talk about what we do and why Rails is such a good\nframework for helping people to make sustainable and healthy choices.",
      "year": "2020",
      "month": "march"
    }
  ],
  "Jairo Diaz": [
    {
      "title": "London Ruby Events",
      "author": "Jairo Diaz",
      "author_link": "https://www.linkedin.com/in/jairodiaz4/",
      "coverage": null,
      "summary": "I am going to tell you about the Ruby events in London that I am\norganising such as the [Ruby Hacknight](https://www.meetup.com/ruby-hacknight-london/)\nand [Ruby London Jobs](https://www.meetup.com/Ruby-Jobs-London/) and\nother events for the community that are the most common. I will also\nmention different event formats which I have experienced and found\nuseful for different purposes.",
      "year": "2020",
      "month": "march"
    },
    {
      "title": "Action Cable",
      "author": "Jairo Diaz",
      "author_link": "https://codescrum.com",
      "coverage": "{::coverage year=\"2016\" month=\"august\" talk=\"action-cable\" /}",
      "summary": "[Action Cable](https://github.com/rails/rails/tree/master/actioncable) is a\nRails framework for real-time communication over websockets introduced in\nRails 5.0. With Action Cable we can develop interactive applications and live\nnotifications to our users.",
      "year": "2016",
      "month": "august"
    },
    {
      "title": "Containers Patterns for Rails",
      "author": "Jairo Diaz",
      "author_link": "https://twitter.com/codescrum",
      "coverage": "{::coverage year=\"2015\" month=\"september\" talk=\"containers-patterns-for-rails\" /}",
      "summary": "In this talk we explore how to use docker containers to run ruby on\nrails applications.  Rails applications usually require several\ndifferent components such as Nginx, Redis, MySQL, Mongo and background\njobs. We will show how to set up and manage the configuration of these\nelements.",
      "year": "2015",
      "month": "september"
    },
    {
      "title": "[Bebox](https://github.com/codescrum/bebox) - Convention over configuration for puppet repositories",
      "author": "Jairo Diaz",
      "author_link": "http://www.codescrum.com/",
      "coverage": "{::coverage year=\"2014\" month=\"september\" talk=\"bebox-convention-over-configuration-for-puppet-repositories\" /}",
      "summary": "Bebox helps automating the provisioning of environments in which\nRuby on Rails applications run, easing the reproduction of new\nserver setups every time.\nBebox's main concern is the structure. It is generally a good\nidea to have conventions about how different source code files\nare placed and named and be able to use this to reduce the\ndetails required to understand a project while also providing\nautomation in key places. These conventions may include things\nlike: how to write puppet modules, how to integrate them into\nthe projects, a directory structure for the projects, how to\nhave a replicated “development/test” environment into virtual\nmachines, etc.",
      "year": "2014",
      "month": "september"
    },
    {
      "title": "Application Example based on Gov.uk public code",
      "author": "Jairo Diaz",
      "author_link": "http://www.codescrum.com",
      "coverage": "{::coverage year=\"2013\" month=\"june\" talk=\"application-example-based-on-gov-uk-public-code\" /}",
      "summary": "This talk describes an experience of reusing the public code\navailable from the [GOV.UK project](https://www.gov.uk). It\nshows how we can implement custom customer service flows\nbased on the [SmartAnswers project](https://github.com/alphagov/smart-answers).",
      "year": "2013",
      "month": "june"
    },
    {
      "title": "Zero-Downtime Deployment",
      "author": "Jairo Diaz",
      "author_link": "http://www.codescrum.com/",
      "coverage": "{::coverage year=\"2012\" month=\"september\" talk=\"zero-downtime-deployment\" /}",
      "summary": "A zero-downtime deployment configuration is important for\ncritical systems that need to handle every request (i.e.\nfinancial system) and lately for systems following\ncontinuous delivery  principles since there could be many\nfrequent deployments .  This talks present a simple\nconfiguration for zero-downtime deployments for ruby\napplications.",
      "year": "2012",
      "month": "september"
    },
    {
      "title": "Extracting value from legacy applications using Ruby",
      "author": "Jairo Diaz",
      "author_link": "http://twitter.com/codescrum",
      "coverage": null,
      "summary": "",
      "year": "2011",
      "month": "july"
    }
  ],
  "Panos Matsinopoulos": [
    {
      "title": "Hanami, another Opinionated Rack-based Framework",
      "author": "Panos Matsinopoulos",
      "author_link": "http://www.linkedin.com/in/panayotismatsinopoulos",
      "coverage": "{::coverage year=\"2020\" month=\"june\" talk=\"hanami-another-opinionated-rack-based-framework\" /}",
      "summary": "We present Hanami and its differences to Rails. Then\nwe show an integration case between a Hanami and a Rails project. Finally,\nwe close with a PR on the Hanami project.",
      "year": "2020",
      "month": "june"
    }
  ],
  "Alfredo Motta": [
    {
      "title": "Agile or Waterfall; a risk management perspective",
      "author": "Alfredo Motta",
      "author_link": "https://twitter.com/mottalrd",
      "coverage": "{::coverage year=\"2020\" month=\"june\" talk=\"agile-or-waterfall-a-risk-management-perspective\" /}",
      "summary": "Today Agile is the default choice for software development out there. Every\nconference, book, or blog post is telling us we are doomed to fail if we\ndon’t follow this established convention. But isn't it surprising to think\nthat Agile is advocated as the right methodology for every possible company\ndoing software out there? Are we going to organize software development\nexactly the same way if we are working for a startup, NASA, or FedEx? It\nseems hard to believe. In this presentation, I will explore the mental\nmodel to help you choose when you should (or sometimes should not) use\nAgile using the lenses of risk management. My goal is to provide guidance\nfor the puzzled business owner, project manager, or software developer who\nwants to pick what's right for their company or team.",
      "year": "2020",
      "month": "june"
    }
  ],
  "Jolyon Pawlyn": [
    {
      "title": "Improved security for password authentication",
      "author": "Jolyon Pawlyn",
      "author_link": "https://twitter.com/jpawlyn",
      "coverage": "{::coverage year=\"2020\" month=\"july\" talk=\"improved-security-for-password-authentication\" /}",
      "summary": "Devise is a great authentication solution and is standard in many Rails\napplications. I want to look at 2 easy improvements to the default password\nvalidation. Then let's see what it takes to implement bare bones two-factor\nauthentication using Devise and Warden.\nThe security features to be covered can be viewed in [an example",
      "year": "2020",
      "month": "july"
    }
  ],
  "Nicky Thompson": [
    {
      "title": "Perfect is the enemy of good",
      "author": "Nicky Thompson",
      "author_link": "https://twitter.com/knotnicky",
      "coverage": "{::coverage year=\"2020\" month=\"july\" talk=\"perfect-is-the-enemy-of-good\" /}",
      "summary": "This talk is a rambling rag-tag collection of software engineering and\nproblem-solving lessons learned over the course of *mumble* years as a\ndeveloper and now an engineering manager. It includes practical tips,\nphilosophical insights, or just advice that other people gave me that I\nfound helpful. These ideas have helped me be better at my job over the\nyears. They are tried and tested, things that I have actually done\nthroughout my career. They might or might not help you.",
      "year": "2020",
      "month": "july"
    },
    {
      "title": "Using software engineering practices to improve engineering management",
      "author": "Nicky Thompson",
      "author_link": "https://twitter.com/knotnicky",
      "coverage": null,
      "summary": "As an engineering manager, your responsibility is not to build features,\nbut to build systems to support the people building the features. This\ntalk will give some tips on using familiar tools and techniques from\nyour time as a software engineer to help make management easier and more\nsystematic.",
      "year": "2019",
      "month": "october"
    }
  ],
  "The kind folks at RubyConfBY": [
    {
      "title": "RubyConfBY Raffle",
      "author": "The kind folks at RubyConfBY",
      "author_link": "The kind folks at https://rubyconference.by/",
      "coverage": null,
      "summary": "",
      "year": "2020",
      "month": "july"
    }
  ],
  "Simply Business": [
    {
      "title": "Food & Drinks",
      "author": "Simply Business",
      "author_link": "https://www.simplybusiness.co.uk/",
      "coverage": null,
      "summary": "",
      "year": "2020",
      "month": "february"
    }
  ],
  "Jonas Jabari": [
    {
      "title": "Create a Twitter clone in 15 minutes in pure Ruby with Matestack",
      "author": "Jonas Jabari",
      "author_link": "https://twitter.com/jonasjabari",
      "coverage": null,
      "summary": "Matestack enables you to implement reactive web UIs in pure Ruby, skipping\nERB, HTML and JavaScript. In a live coding session, we will create a Twitter\nclone using Matestack's core features from scratch!",
      "year": "2020",
      "month": "december"
    }
  ],
  "Matt Bee": [
    {
      "title": "Language doesn't matter: what makes a senior engineer?",
      "author": "Matt Bee",
      "author_link": "https://twitter.com/mattbee",
      "coverage": "{::coverage year=\"2020\" month=\"august\" talk=\"language-doesnt-matter-what-makes-a-senior-engineer\" /}",
      "summary": "What makes a senior engineer? What other aspects of\nbeing a senior engineer are as important, if not more important, than\nknowing a programming language inside out. What things can you work on to\nbecome or be a better senior engineer (that won't have a new framework out\nby next week!). This is a set of lessons learned in a journey from self\ntaught front end developer to senior polyglot developer (via ruby).",
      "year": "2020",
      "month": "august"
    }
  ],
  "Chris Zetter": [
    {
      "title": "Doing the right thing",
      "author": "Chris Zetter",
      "author_link": "https://chriszetter.com",
      "coverage": "{::coverage year=\"2020\" month=\"august\" talk=\"doing-the-right-thing\" /}",
      "summary": "Ethics are the principles of right and wrong that govern\nour behaviour. Using examples from my experience, i'll share some tools\nthat you can use to understand ethical decisions and ways to help\nourselves and our team make the right choices.",
      "year": "2020",
      "month": "august"
    },
    {
      "title": "Splitting strings",
      "author": "Chris Zetter",
      "author_link": "https://twitter.com/czetter",
      "coverage": null,
      "summary": "I'll be talking about a bug I caused that led me on a journey of software\narchaeology. I'll be sharing what I discovered along the way.",
      "year": "2017",
      "month": "october"
    }
  ],
  "Joel Chippindale": [
    {
      "title": "How to take control of code quality",
      "author": "Joel Chippindale",
      "author_link": "https://twitter.com/joelchippindale",
      "coverage": "{::coverage year=\"2020\" month=\"april\" talk=\"how-to-take-control-of-code-quality\" /}",
      "summary": "We all know how valuable it is to keep the quality of your code high. Working on a high quality codebase is more enjoyable and enables us to deliver value much more effectively for our users and yet, time and again I hear engineers saying, “I am not allowed to spend sufficient time on code quality”.\nThis talk clarifies the value of maintaining a high quality codebase, gives you guidance on how to talk about this to help you get the support of your colleagues and managers for spending time on this and also outlines some key practices that will help you achieve this.",
      "year": "2020",
      "month": "april"
    },
    {
      "title": "Simplify writing code with deliberate commits",
      "author": "Joel Chippindale",
      "author_link": "https://twitter.com/joelchippindale",
      "coverage": null,
      "summary": "As developers, a key part of our work, is in breaking down large gnarly complex problems into smaller simpler ones. But this is hard and there are many distractions along the way. In this talk I will take you through 5 habits to adopt around commiting your code which will help you keep focussed on these smaller simpler problems and make it easier for you to write good code.",
      "year": "2019",
      "month": "june"
    },
    {
      "title": "Learning through blameless reviews",
      "author": "Joel Chippindale",
      "author_link": "https://twitter.com/joelchippindale",
      "coverage": "{::coverage year=\"2015\" month=\"september\" talk=\"learning-through-blameless-reviews\" /}",
      "summary": "In this talk I will outline some of the ways that teams react to the\nmistakes they make and how blameless reviews can help teams learn from\nthese mistakes",
      "year": "2015",
      "month": "september"
    },
    {
      "title": "Telling stories through your commits",
      "author": "Joel Chippindale",
      "author_link": "https://twitter.com/joelchippindale",
      "coverage": "{::coverage year=\"2015\" month=\"january\" talk=\"telling-stories-through-your-commits\" /}",
      "summary": "In this talk we'll look at some of the ways that you can\nimprove how you develop code and communicate with your team\nthrough your commits.",
      "year": "2015",
      "month": "january"
    },
    {
      "title": "My tests run faster than your tests",
      "author": "Joel Chippindale",
      "author_link": "http://blog.mocoso.co.uk/",
      "coverage": "{::coverage year=\"2012\" month=\"december\" talk=\"hermes-add-wings-to-ruby-and-javascript-development\" /}",
      "summary": "An introduction to [Zeus](https://github.com/burke/zeus) and\nthe approach it takes for making rails tests run lightning fast.",
      "year": "2012",
      "month": "december"
    }
  ],
  "Rob McKinnon": [
    {
      "title": "Music Experiments in Sonic Pi",
      "author": "Rob McKinnon",
      "author_link": "https://github.com/robmckinnon",
      "coverage": "{::coverage year=\"2020\" month=\"april\" talk=\"music-experiments-in-sonic-pi\" /}",
      "summary": "Let's celebrate Sonic Pi's v3.2 release, scheduled for 28 Feb!\nSonic Pi's an open source Ruby code-based music creation and performance tool.\nRob's presenting a few experiments in Sonic Pi, covering oddities such as:\n* negative melody\n* Jianpu (numbered musical notation)\n* just intonation\n* microtonal music - 19 EDO (Equal Division of the Octave)\n* interfacing with MIDI controllers over USB and bluetooth BLE.\nAlso Rob will walk us through a memory management improvement PR to Sonic Pi - that may have made it into the release.",
      "year": "2020",
      "month": "april"
    }
  ],
  "Stepan Khodzhaian": [
    {
      "title": "Computer Graphics for Ruby developers",
      "author": "Stepan Khodzhaian",
      "author_link": "https://skillsmatter.com/members/mightykho",
      "coverage": null,
      "summary": "Computer graphics is a very broad and deep topic. The purpose of\nthis talk is to show that up to a certain point it is not that\ncomplicated and you can get interesting looking results without\ndriving yourself mad with insane mathematical equations, integrals,\nand whatnot.",
      "year": "2019",
      "month": "september"
    }
  ],
  "Edwin Wills": [
    {
      "title": "How to say no to Salesforce and build your own CRM",
      "author": "Edwin Wills",
      "author_link": "https://twitter.com/edwinwills",
      "coverage": null,
      "summary": "In 2016 Rentify decided to ditch Salesforce and build our own CRM tool to\nhelp manage our growing portfolio of properties and tenants across London.\nI'll talk through why we did this, some of the features we've built, and how > we've structured the technology behind it.",
      "year": "2019",
      "month": "september"
    }
  ],
  "Ju Liu": [
    {
      "title": "Have your Sorbet and eat it too",
      "author": "Ju Liu",
      "author_link": "https://twitter.com/arkh4m",
      "coverage": null,
      "summary": "A short and sweet introduction to [Sorbet](https://sorbet.org), a type checker\nfor Ruby. Learn how you can use types to write bulletproof code!",
      "year": "2019",
      "month": "september"
    }
  ],
  "Lorenzo Barasti": [
    {
      "title": "Concurrency in Crystal",
      "author": "Lorenzo Barasti",
      "author_link": "https://twitter.com/lbarasti",
      "coverage": null,
      "summary": "[Crystal](https://crystal-lang.org) is a Ruby inspired language that\noffers type safety and a minimal runtime. In this talk we'll look into\nCrystal's concurrency model ([Communicating Sequential Processes](https://en.m.wikipedia.org/wiki/Communicating_sequential_processes))\nand how it shapes the way we write concurrent applications.",
      "year": "2019",
      "month": "october"
    },
    {
      "title": "Better scripting with Crystal",
      "author": "Lorenzo Barasti",
      "author_link": "https://twitter.com/lbarasti",
      "coverage": null,
      "summary": "What are the benefits of porting existing Ruby scripts to Crystal?\nHow can writing scripts from scratch in Crystal impact our productivity?\nWe'll explore these questions and highlight differences and similarities between the two languages in the process.",
      "year": "2017",
      "month": "july"
    },
    {
      "title": "Leveraging immutability in Ruby",
      "author": "Lorenzo Barasti",
      "author_link": "https://www.linkedin.com/pub/lorenzo-barasti/5a/918/685",
      "coverage": "{::coverage year=\"2015\" month=\"november\" talk=\"leveraging-immutability-in-ruby\" /}",
      "summary": "Why should we care about using immutable objects in our code? What does\nfunctional programming have to do with immutability? How do we approach\nimmutability when the frameworks and libraries we use seem to go a different\ndirection?\nWe'll try to answer these questions by looking at the ideas behind the\nimplementation of some immutable data structure.",
      "year": "2015",
      "month": "november"
    }
  ],
  "Michael Nacos": [
    {
      "title": "How to stop worrying, love the SPA and appreciate Rails.",
      "author": "Michael Nacos",
      "author_link": "https://twitter.com/mnacos",
      "coverage": null,
      "summary": "Some people love them, some people hate them, but single page\napplications are here to stay, if not take over. Michael suggests there\nmay be greater SPA platform potential to Rails than you think.",
      "year": "2019",
      "month": "october"
    }
  ],
  "Scott Matthewman": [
    {
      "title": "Call the Cops: Bringing style to a lawless codebase",
      "author": "Scott Matthewman",
      "author_link": "https://twitter.com/scottm",
      "coverage": null,
      "summary": "Working with legacy codebases can be tricky at the best of times. What can\nmake it worse if there’s no consistency in style. Linters (and Ruby’s RuboCop\nin particular) can help us write good code going forward – but what about the\ncode that’s already there? There are good ways, and bad, to get RuboCop to\nhelp.",
      "year": "2019",
      "month": "november"
    },
    {
      "title": "You’re doing documentation wrong (and so am I)",
      "author": "Scott Matthewman",
      "author_link": "https://twitter.com/scottm",
      "coverage": null,
      "summary": "As developers, we’re always asked to write more documentation. Some of us\neven do it without being asked. But look around the web and you’ll see\ncountless gems, applications and source code examples whose documentation\nis either missing or makes no sense. How can we make little changes to the\nway we think about documentation to make things better?",
      "year": "2018",
      "month": "april"
    },
    {
      "title": "Hack like a journalist",
      "author": "Scott Matthewman",
      "author_link": "https://twitter.com/scottm",
      "coverage": "{::coverage year=\"2015\" month=\"november\" talk=\"hack-like-a-journalist\" /}",
      "summary": "News reporters are trained in techniques to produce stories that are concise,\nwell structured, easy to follow and with a consistent house style. How can\nthose same techniques help us write better code?",
      "year": "2015",
      "month": "november"
    }
  ],
  "Daniel Magliola": [
    {
      "title": "Disk is fast, memory is slow. Forget all you think you know",
      "author": "Daniel Magliola",
      "author_link": "https://twitter.com/dmagliola",
      "coverage": null,
      "summary": "Adding metrics to your code should effectively have no impact on performance.\nWhen we were recently tasked with doing that in multi-process Ruby servers, we\nran into an interesting challenge: could we aggregate our numbers across\nprocesses without blowing our target of just one microsecond of overhead? In\nthe process, we found some very counter-intuitive performance results that I'd\nlike to share with you.",
      "year": "2019",
      "month": "november"
    }
  ],
  "Pablo Brasero Moreno": [
    {
      "title": "Getting the next generation into coding",
      "author": "Pablo Brasero Moreno",
      "author_link": "https://twitter.com/pablobm",
      "coverage": null,
      "summary": "In the last few years, I've been involved in teaching coding to people\nfrom several walks of life, including children. In this talk, I'll share\nmy thoughts and experiences on teaching children to code.",
      "year": "2019",
      "month": "may"
    },
    {
      "title": "Passing on our skills to the next generation",
      "author": "Pablo Brasero Moreno",
      "author_link": "http://pablobm.com/",
      "coverage": "{::coverage year=\"2013\" month=\"march\" talk=\"passing-on-our-skills-to-the-next-generation\" /}",
      "summary": "I will share my experience teaching programming to children\nfor a month. I will also tell us about \"code clubs\" in the\nUK, and what technologies exist to assist teachers in\nthis task.",
      "year": "2013",
      "month": "march"
    }
  ],
  "John Cinnamond": [
    {
      "title": "Monoids",
      "author": "John Cinnamond",
      "author_link": "https://twitter.com/jcinnamond",
      "coverage": null,
      "summary": "Mathematics can make you a better person. Well, not really. It can, \nhowever, help you think about programming. This talk provides a very quick \nintroduction to a branch of mathematics called 'general algebra' and looks\nat how it can apply to programming. We then take a real world programming \nchallenge and solve it algebraically, then convert that algebraic solution\ninto working code. By the end you'll be left feeling confused, perhaps a \nlittle angry, almost certainly a little bored. But without even noticing \nanything has changed you'll soon start to look at difficult software\nproblems and see past the superficial complexity to get a better \nunderstanding of the underlying structures at play. And you'll be a better\nperson for it.",
      "year": "2019",
      "month": "may"
    },
    {
      "title": "Do you even declarative?",
      "author": "John Cinnamond",
      "author_link": "https://twitter.com/jcinnamond",
      "coverage": null,
      "summary": "A reflection on some recent tweets about declarative programming by Sarah Mei,\nand a look at the broader idea of the relationship between mathematics and\ncomputing.",
      "year": "2017",
      "month": "may"
    },
    {
      "title": "The Art of Code Review",
      "author": "John Cinnamond",
      "author_link": "https://twitter.com/jcinnamond",
      "coverage": "{::coverage year=\"2016\" month=\"may\" talk=\"the-art-of-code-review\" /}",
      "summary": "Most of us do some form of code review, increasingly often through pull\nrequests. Done well it can be a great tool for improving quality, sharing\nknowledge, and building a sense of cohesion in a team. Done badly it can be\ntoxic. In this talk I’d like to look at the motivations for code review,\nexamine research into its value, and suggest some practices on how to do it\nwell.",
      "year": "2016",
      "month": "may"
    },
    {
      "title": "Tell, Don’t Ask",
      "author": "John Cinnamond",
      "author_link": "https://twitter.com/jcinnamond",
      "coverage": "{::coverage year=\"2016\" month=\"august\" talk=\"tell-don-t-ask\" /}",
      "summary": "Everything you ever need to know about how to write the most wonderful code, in 10 minutes.",
      "year": "2016",
      "month": "august"
    }
  ],
  "Gonçalo Morais": [
    {
      "title": "A practical guide for conducting efficient code reviews",
      "author": "Gonçalo Morais",
      "author_link": "https://twitter.com/gnclmorais",
      "coverage": null,
      "summary": "Do you have code reviews at your daily work? Have you ever found yourself thinking they feel like a tug of war? That writing the code is the easy part of the job? That’s OK, we put so much emphasis in languages, patterns and lines of code that is easy to forget about other (soft) skills that are required every single day. This talk will provide you a few important thoughts to have in mind for a successful and fruitful code review, both in the shoes of the reviewer and the reviewee.",
      "year": "2019",
      "month": "june"
    }
  ],
  "Denis Sellu": [
    {
      "title": "What does a Coconut and Serverless have in common?",
      "author": "Denis Sellu",
      "author_link": "https://twitter.com/Denis_Sellu",
      "coverage": null,
      "summary": "Most developers (probably you) without knowing are already using serverless technologies. We will briefly explore just what it means for something to be serverless and how you can use it to enhance your solutions, so it can be another tool in your toolbox.\n Using AWS and Google Cloud, we will then dive in to demo and examples to show you how to get started and the true potentials of serverless - plus tons of facts about coconuts Until last year the support for Ruby in the world of FAAS was next to non-existent, now that AWS Lambda has officially started supporting Ruby, I want to catch up any Rubyists who are not yet familiar with the technology, so it can be another tool for the toolbox.",
      "year": "2019",
      "month": "july"
    }
  ],
  "Tim Diggins": [
    {
      "title": "Small Tech Teams",
      "author": "Tim Diggins",
      "author_link": "https://twitter.com/timdiggins",
      "coverage": null,
      "summary": "When I read the tech process literature I feel it's very interesting but it's often about quite a different universe from the world of working on small/tiny tech teams (teams with 1-3 developers/testers/architects/designers). Does that mean that the processes they talk about are only applicable to larger teams? Or maybe that small tech teams don't have the problems that these processes aim to solve. In this talk I want to start to unpick some of this, with the help of 40+ volunteers (thanks for your survey responses).",
      "year": "2019",
      "month": "july"
    }
  ],
  "Adrian Booth": [
    {
      "title": "Automating AWS Infrastructure for Rails Applications",
      "author": "Adrian Booth",
      "author_link": "https://twitter.com/Adrian1707",
      "coverage": null,
      "summary": "In this talk I'll walk you through how to build a Cloud66 clone, a DevOps platform that's gaining ground in the Rails community. Wouldn't it be nice to provide a service with a Github link and have all the AWS infrastructure (EC2 servers, load balancers, databases etc) set up for you whilst you grind your coffee beans. Come to this talk to find out how easy that actually is.",
      "year": "2019",
      "month": "july"
    }
  ],
  "Gerhard Lazu": [
    {
      "title": "Make Your System Observable",
      "author": "Gerhard Lazu",
      "author_link": "https://twitter.com/gerhardlazu",
      "coverage": null,
      "summary": "This is what happened when RabbitMQ became more observable. The same\nbenefits apply to your product too. Let me show you why.\nWhat does it mean for a system to be observable? Why is observability a\nrequirement? How does it make everything better?",
      "year": "2019",
      "month": "december"
    },
    {
      "title": "Not working together",
      "author": "Gerhard Lazu",
      "author_link": "https://twitter.com/gerhardlazu",
      "coverage": "{::coverage year=\"2016\" month=\"september\" talk=\"not-working-together\" /}",
      "summary": "How does a small team spread across London & Omaha set up a global\nproduction infrastructure while not working together?",
      "year": "2016",
      "month": "september"
    },
    {
      "title": "deliver",
      "author": "Gerhard Lazu",
      "author_link": "http://gerhardlazu.com/",
      "coverage": "{::coverage year=\"2013\" month=\"march\" talk=\"deliver\" /}",
      "summary": "I will be speaking about app deployment, good production\npractices, CI and CD and app versioning (never replace a\nworking production app instance with a new deploy).\n[deliver](https://github.com/gerhard/deliver) is a single\nutility to rule one's deploys to gh:pages, Jekyll, Ruby,\nnode.js etc, even legacy PHP code (we all have it). The\ntalk will also touch on S3-backed site deploys & Route53\nIP failover to that S3 site.",
      "year": "2013",
      "month": "march"
    }
  ],
  "Adam Paca": [
    {
      "title": "Spree Commerce: How to run an eCommerce platform?",
      "author": "Adam Paca",
      "author_link": "https://sparksolutions.co/author/adam/",
      "coverage": null,
      "summary": "Spree Commerce is an open-source eCommerce framework build by developers\nfor developers. For the past 5 years, I have been working alongside the\ncore team of the Spree project. I will be talking about real-life\nchallenges one faces when building eCommerce solutions and how Spree can\nhelp overcome them. I will also share with you insight into the future\nplans regarding the Spree framework.",
      "year": "2019",
      "month": "august"
    }
  ],
  "Frederick Cheung": [
    {
      "title": "Pattern matching in ruby 2.7",
      "author": "Frederick Cheung",
      "author_link": "https://twitter.com/fglc2",
      "coverage": null,
      "summary": "Pattern matching is on track to be part of the next version of ruby, so\nlet’s take a sneak peak at how it looks and how it compares to other\nlanguages implementation of it.",
      "year": "2019",
      "month": "august"
    },
    {
      "title": "Introduction to Elasticsearch",
      "author": "Frederick Cheung",
      "author_link": "http://spacevatican.org/",
      "coverage": "{::coverage year=\"2012\" month=\"june\" talk=\"introduction-to-elasticsearch\" /}",
      "summary": "Most apps need some form of search or filtering at some point\n(even if they don't need full text). [Elasticsearch](http://www.elasticsearch.org/) is a new(ish)\nsearch engine built on top of [Lucene](http://lucene.apache.org/) with some interesting features\nthat set it apart from other search engines such as sphinx or solr.\nI'll show what we've used elasticsearch for and why we picked it over\ncompeting solutions such as solr or sphinx.",
      "year": "2012",
      "month": "june"
    },
    {
      "title": "Going Native",
      "author": "Frederick Cheung",
      "author_link": "http://www.spacevatican.org/",
      "coverage": "{::coverage year=\"2012\" month=\"december\" talk=\"going-native\" /}",
      "summary": "We all love ruby, but sometimes ruby is not enough. Whether it be a\nperformance bottleneck, a killer library written in C or some\nplatform specific functionality you just have to have, sometimes you\nneed to drop down a level.\nThere have been many talks that show how to take the first steps in\nwriting a ruby C extension. This isn't one of them. I propose\ninstead to give an overview of different ways of extending ruby and\nshow what each approach brings to the table. I intend to cover\n'classic' C extensions, RubyInline and FFI across a range of ruby\nimplementations.",
      "year": "2012",
      "month": "december"
    }
  ],
  "Tijmen Brommet": [
    {
      "title": "Reuse your government's code",
      "author": "Tijmen Brommet",
      "author_link": "https://twitter.com/tijmenbr",
      "coverage": null,
      "summary": "Developers on GOV.UK have been coding in the open for the last 8 years.\nIn this talk we'll talk you through 10 things that you could use, copy\nor learn from GOV.UK 's public GitHub repos.",
      "year": "2019",
      "month": "august"
    },
    {
      "title": "5 ways to keep docs up to date",
      "author": "Tijmen Brommet",
      "author_link": "https://twitter.com/tijmenbr",
      "coverage": null,
      "summary": "Project documentation often falls into a cycle of disrepair: it's\nnot read because it's not up to date, and not up to date because\nnobody reads it. This is a talk about how we tried to break that\ncycle for GOV.UK's internal developer documentation. I'll cover what\nwe tried, what works & what doesn't, and how to employ a punny chat\nbot to help you.",
      "year": "2017",
      "month": "november"
    }
  ],
  "Tomas Valent": [
    {
      "title": "Web Architecture choices & Ruby",
      "author": "Tomas Valent",
      "author_link": "https://twitter.com/equivalent8",
      "coverage": null,
      "summary": "I'll try to talk about most popular web application architecture choices\n(monolith, micro-service, serverless and their variations) from the\nperspective of a Ruby developer. When is good to use one over the other and\nphilosophies behind them.",
      "year": "2018",
      "month": "march"
    },
    {
      "title": "AWS Elastic Beanstalk & Docker for Rails developers.",
      "author": "Tomas Valent",
      "author_link": "https://twitter.com/equivalent8",
      "coverage": null,
      "summary": "Elastic Beanstalk (EB) is a product from AWS that is trying to provide easy\nto setup load balanced environment of EC2 instances.\nIn this talk we will configure simple Rails app, wrap it in a Docker container\nand ship it to AWS EB setup.  We will look at some awesome configuration\noptions.",
      "year": "2016",
      "month": "november"
    }
  ],
  "Alex Heeton": [
    {
      "title": "Strong opinions, loosely held",
      "author": "Alex Heeton",
      "author_link": "https://twitter.com/alexheeton",
      "coverage": null,
      "summary": "Strong opinions and principles are a great thing to have. In this talk I'll\nshare some of my principles, and show how they've helped me grow teams and\nbuild more robust software, with a special focus on managing larger Rails\napplications.",
      "year": "2018",
      "month": "march"
    }
  ],
  "Chris O’Sullivan": [
    {
      "title": "Make responsive emails super-duper easily with MJML",
      "author": "Chris O’Sullivan",
      "author_link": "https://twitter.com/thechrisoshow",
      "coverage": null,
      "summary": "If you're like me, you hate making HTML emails that work across email apps\nand devices. In this lightning talk I'm going to introduce you to MJML - a\nmarkup language that takes a lot of pain out of making responsive emails. You\ncan find more information at http://mjml.io.",
      "year": "2018",
      "month": "march"
    }
  ],
  "Chris Patuzzo": [
    {
      "title": "Sliding Puzzles",
      "author": "Chris Patuzzo",
      "author_link": "https://twitter.com/chrispatuzzo",
      "coverage": null,
      "summary": "Did you ever play with one of those cheap plastic-y tile puzzles as a\nchild? Let's try to solve them with Ruby and use that as an excuse to talk\nabout combinatorics, complexity theory and proof.",
      "year": "2018",
      "month": "april"
    },
    {
      "title": "Domain Driven Design, In the Wild",
      "author": "Chris Patuzzo",
      "author_link": "https://github.com/tuzz",
      "coverage": "{::coverage year=\"2015\" month=\"august\" talk=\"domain-driven-design-in-the-wild\" /}",
      "summary": "Every day, we write software that solves business problems. How we\nactually do that is largely up to us. We tend to build models that\nencapsulate complexity and provide abstractions that help us reason\nabout the problems we solve.\nWe stress our models with incremental development. Changing business\nrequirements challenge the durability of our models. The magnitude of\nchange is an indicator for the effectiveness of our models' ability to\nrepresent the problem domain.\nAt [Which?](https://github.com/whichdigital) we used [Domain Driven\nDesign](https://en.wikipedia.org/wiki/Domain-driven_design) to deliver\nour most recent project. In this talk, I will share those insights. I\naim to cut through the jargon and give concrete, real-world examples of\nhow we applied the principles of DDD to build a product that\nanticipates change.",
      "year": "2015",
      "month": "august"
    }
  ],
  "Kir Shatrov": [
    {
      "title": "Scaling millions of jobs with Enumerators",
      "author": "Kir Shatrov",
      "author_link": "https://twitter.com/kirshatrov",
      "coverage": null,
      "summary": "Enumerator is a pattern that not too many developers are often exposed to,\ndespite the fact that it comes with Ruby and is leveraged in many libraries\nthat we use every day (Rails). Join the talk to learn how we’ve used\nEnumerators to scale millions of background jobs at Shopify and how it\ninfluenced the way developers think when writing resilient code.",
      "year": "2018",
      "month": "april"
    }
  ],
  "Jan Krutisch": [
    {
      "title": "Let Humans Human and Computers Computer - A Tale of Building Effective Automations",
      "author": "Jan Krutisch",
      "author_link": "https://twitter.com/halfbyte",
      "coverage": null,
      "summary": "Boring, repetitive tasks, are, if we like it or not, part of our daily\nroutine as developers. We can try to automate them away as much as\npossible, but what exactly makes a good automation? By looking at a\nnumber of common and not so common automations, we'll see how we can\nmake computers do what they do best and at the same time keep us humans\nin control.",
      "year": "2017",
      "month": "september"
    }
  ],
  "Ben Griffiths": [
    {
      "title": "Hindsight: Creating the Perfect Project History",
      "author": "Ben Griffiths",
      "author_link": "https://twitter.com/beng",
      "coverage": null,
      "summary": "A demonstration of a new proof-of-concept ruby tool for automatically\ncreating a perfect project history using git, tests and coverage\ntools. How would you have built your app if you knew from the start\neverything you know now.",
      "year": "2017",
      "month": "september"
    }
  ],
  "Andrew McDonough": [
    {
      "title": "A Trip Back to Where I Grew Up",
      "author": "Andrew McDonough",
      "author_link": "https://twitter.com/andrewmcdonough",
      "coverage": null,
      "summary": "Andrew recently revisited a place he left long ago. He was happy to\nfind that things had changed for the better, and wants to share his\nstory.",
      "year": "2017",
      "month": "september"
    },
    {
      "title": "Andrew McDonough : Ruby Golf",
      "author": "Andrew McDonough",
      "author_link": "http://www.andrewmcdonough.com/",
      "coverage": "{::coverage year=\"2011\" month=\"may\" talk=\"ruby-golf\" /}",
      "summary": "I started my career as a perl programmer.  Perl, like\nruby has a lot of 'syntactic sugar' to help developers write concise\ncode.  Perl programmers sometimes play a game known as '[Perl Golf](http://c2.com/cgi/wiki?PerlGolf)' to\nexplore the lesser-known features of the language.  The aim of 'perl\ngolf' is to solve a problem using the fewest characters possible.\nAt this month's meeting Andrew will run a practical evening based\naround 'ruby golf', an adaptation of perl golf for ruby developers.\nPeople will be asked to form teams of 4-8 people, and solve nine short\nruby golf 'holes' using as few characters as possible.  Each hole will\nbe defined by a set of [RSpec](http://rspec.info) examples describing a single method, and\nthe teams must write the method to pass all of the examples.  At the\nend, the solutions will be scored and the winning team will be\nannounced.\nThis evening should have something for everyone; beginners can pick up\nsome language tricks and learn how to write code to pass tests, while\nexperienced ruby developers will have the opportunity to show off\ntheir skills and compete with their peers.",
      "year": "2011",
      "month": "may"
    }
  ],
  "Paula Muldoon": [
    {
      "title": "Work Smart, Not Hard",
      "author": "Paula Muldoon",
      "author_link": "https://twitter.com/FiddlersCode",
      "coverage": null,
      "summary": "Work Smart, Not Hard draws on Paula’s experience as an international\nviolinist and Makers Academy alumna to promote practices that lead to code\nthat’s well-designed, extensible, easy to debug, and enjoyable to write.",
      "year": "2017",
      "month": "october"
    }
  ],
  "Emily Woods": [
    {
      "title": "Making a Ruby with Lisp Syntax",
      "author": "Emily Woods",
      "author_link": "https://twitter.com/emily_m_woods",
      "coverage": null,
      "summary": "I'll be discussing compiler design and sharing my experiences of designing a\nLisp-like language which compiles to Ruby.",
      "year": "2017",
      "month": "october"
    }
  ],
  "James Smith": [
    {
      "title": "OpenPolitics: making policy with open source ideas",
      "author": "James Smith",
      "author_link": "https://skillsmatter.com/legacy_profile/james-smith",
      "coverage": null,
      "summary": "The OpenPolitics project is a collaborative political policy-writing\nplatform. Started as an experiment in using open source principles\noutside the world of tech, it’s grown into a tool (written in Ruby)\nthat allows anyone with a good idea to take a direct role in writing\npolicy. This talk will explain how the project started, how the system\nevolved, and how it currently works atop git and GitHub to make open\nsource workflows democratic and accessible by non-developers.",
      "year": "2017",
      "month": "november"
    },
    {
      "title": "Pushing Jekyll to breaking point",
      "author": "James Smith",
      "author_link": "https://twitter.com/floppy",
      "coverage": null,
      "summary": "Jekyll is a static web development tool, used by GitHub Pages. Most uses are pretty simple, but you can do a lot more complex things with it too.\nThis talk will explain how I’ve used git submodules, deeply nested JSON, CSV data, and other techniques to produce complex data-driven sites with rich output, all on GitHub Pages in vanilla Jekyll.\nIt will also explain why some of this is a *really* bad idea, and reveal the true horror of some of the code required :)",
      "year": "2017",
      "month": "july"
    }
  ],
  "Ken Fassone": [
    {
      "title": "5 Things I wish my grandfather told me about ActiveRecord and Postgres",
      "author": "Ken Fassone",
      "author_link": "https://twitter.com/nexusventuri",
      "coverage": null,
      "summary": "Common gotchas, how to measure and improve performances when the database is\nthe bottleneck. More about it in this [blog post](https://medium.com/carwow-product-engineering/5-things-i-wish-my-grandfather-told-me-about-activerecord-and-postgres-93416faa09e7).",
      "year": "2017",
      "month": "may"
    }
  ],
  "David Wickes": [
    {
      "title": "A Brief (and incomplete) introduction to Rust (for Rubyists)",
      "author": "David Wickes",
      "author_link": "https://twitter.com/gypsydave5",
      "coverage": null,
      "summary": "Rust! It's the latest flavour of the month. Find out about this friendly\nlow-level language, why rockstar Rubyists like Yehuda Katz and Steve Klabnik\nlike it, and how to embed it in your Ruby code to get a bigger speed boost\nthan those shiny stars in Mariokart.",
      "year": "2017",
      "month": "may"
    }
  ],
  "Michal Horčic": [
    {
      "title": "Action Cable vs. MessageBus - Live updates tailored for Rails",
      "author": "Michal Horčic",
      "author_link": "https://twitter.com/mousse85",
      "coverage": null,
      "summary": "Comparison between Action Cable and MessageBus for live updates in Rails\napplication. Introduction to both solutions, basic implementation and benchmarks.",
      "year": "2017",
      "month": "march"
    }
  ],
  "Philipp Fehre": [
    {
      "title": "The story of the not-so dark magic of application preloading",
      "author": "Philipp Fehre",
      "author_link": "https://twitter.com/ischi",
      "coverage": null,
      "summary": "Many of us use application pre-loaders like zeus or spring, but how do they\nactually work? Lets step through what is actually going on by the example of zeus.",
      "year": "2017",
      "month": "march"
    }
  ],
  "Manuel Morales": [
    {
      "title": "Dependency Injection with Little Boxes",
      "author": "Manuel Morales",
      "author_link": "https://twitter.com/manuelmorales",
      "coverage": null,
      "summary": "A brief description of the benefits of dependency injection and how to gain\nthem with Little Boxes.",
      "year": "2017",
      "month": "march"
    },
    {
      "title": "Scaling beyond Rails",
      "author": "Manuel Morales",
      "author_link": "https://github.com/manuelmorales",
      "coverage": null,
      "summary": "When a Rails application becomes a big fat monster, the moment \narrives to split it into small services that speak to each other. \nI'll discuss how are we attacking this problem in a progressive, \niterative way and which tools we chose for each situation; some of \nwhich are not limited to Ruby.",
      "year": "2013",
      "month": "september"
    }
  ],
  "Nadia Odunayo": [
    {
      "title": "This Code Sucks — A Story About Nonviolent Programming",
      "author": "Nadia Odunayo",
      "author_link": "https://twitter.com/nodunayo",
      "coverage": null,
      "summary": "Think about something that happened at work recently. How did it make you feel? Why did it make you feel that way?\nChances are you answered those two questions poorly. Our inability to answer such questions effectively leads us to communicate in ways that are negative and unhelpful.\nLet’s explore a day in the life of a fictional programmer who, just like us, means well and wants to do a great job. We’ll use our protagonist’s story to learn about how to honestly express our needs and effectively collaborate in disagreement.",
      "year": "2017",
      "month": "june"
    },
    {
      "title": "Ruby Book Club",
      "author": "Nadia Odunayo",
      "author_link": "https://twitter.com/nodunayo",
      "coverage": "{::coverage year=\"2016\" month=\"july\" talk=\"ruby-book-club\" /}",
      "summary": "Hello and welcome to the Ruby Book Club! We’re delighted that you could join\nus.\nToday we’re starting with section 4.9 in [Avdi Grimm’s ‘Confident\nRuby’](http://www.confidentruby.com/): Replace “string typing” with classes.\nAs always, it doesn’t matter if you haven’t found time to do the reading. At\nthe Ruby Book Club, we like to make sure that everyone is on the same page.",
      "year": "2016",
      "month": "july"
    }
  ],
  "Alex McLintock": [
    {
      "title": "Choosing Ruby for a New Startup",
      "author": "Alex McLintock",
      "author_link": "https://twitter.com/alexmc6",
      "coverage": null,
      "summary": "In 2016 I needed to pick the right set of tools for my web based startup, but Ruby on Rails was not my first choice. I will talk about some of the questions I asked myself as a C++/Perl/Java developer and some of the Ruby tools I picked.",
      "year": "2017",
      "month": "june"
    }
  ],
  "Hrishi Mittal": [
    {
      "title": "3 ways of using React with Rails - pros and cons",
      "author": "Hrishi Mittal",
      "author_link": "https://twitter.com/hrishio",
      "coverage": null,
      "summary": "A quick look at a few ways of using React with Ruby on Rails. The pros and cons of using React inside Rails with gems or in a separate frontend app with a Rails API.",
      "year": "2017",
      "month": "june"
    }
  ],
  "Peter Saxton": [
    {
      "title": "Building a webserver in Elixir",
      "author": "Peter Saxton",
      "author_link": "https://twitter.com/crowdhailer",
      "coverage": null,
      "summary": "To a Ruby developer Elixir can seam like one of an overwhelming selection of trendy new languages. Elixir's lightweight processes mark it as unusual among these new languages, and give it a unique set of strengths.\nThis talk explores the virtues of Elixir processes and demonstrates how to work with them.\nFinally we will take a deeper dive into a real world example; constructing a capable webserver.",
      "year": "2017",
      "month": "july"
    }
  ],
  "Najaf Ali": [
    {
      "title": "A developer's misadventures in business",
      "author": "Najaf Ali",
      "author_link": "https://twitter.com/alinajaf",
      "coverage": null,
      "summary": "I am a developer who started a web application development consultancy. This\ntalk is about the story of the business so far, some business basics I had\nto learn for the business to survive, and things you can do to better\nunderstand business, whether or not you intend to start one yourself.",
      "year": "2017",
      "month": "january"
    },
    {
      "title": "Adventures with data structures and algorithms",
      "author": "Najaf Ali",
      "author_link": "http://happybearsoftware.com/",
      "coverage": "{::coverage year=\"2014\" month=\"june\" talk=\"adventures-with-data-structures-and-algorithms\" /}",
      "summary": "Hola amigos! We need to have a chat about data structures\nand algorithms. I've been messing around with them on-and-off\nover the past few years and I believe you'll find spending\nmore time learning them valuable. Here's what I'm going to\ntalk about:\n* Why you should bother learning about them at all, especially if you think you won't use them at work.\n* Some fun examples of data structures/algos you've heard of (and probably some you haven't) and how they're put to work in software you use every day.\n* Ways of learning them that I've found to be fun and effective.\nI swear in the name of [Knuth](https://en.wikipedia.org/wiki/Donald_Knuth) that there shall be no mention of\nbig-o notation or sorting algorithms. Also, I will attempt a\nlive demo of one of the algos using the SATR transport\nprotocol. It probably won't work if you are good at the maths\nand feeling mischievous.\n*[SATR]: Shout Across The Room",
      "year": "2014",
      "month": "june"
    },
    {
      "title": "From a raw TCP socket to a Rails application",
      "author": "Najaf Ali",
      "author_link": "http://najafali.com/",
      "coverage": "{::coverage year=\"2013\" month=\"december\" talk=\"from-a-raw-tcp-socket-to-a-rails-application\" /}",
      "summary": "Ruby and associated frameworks are notorious for employing\nmagic in the name of developer productivity, especially when\nbuilding web applications. In this talk I'm going to peel\nback the layers of voodoo and show you how we go from a raw\nTCP socket to a Rails app via rack applications and middleware.\nWe'll be coving:\n* Very high level overview of TCP connections and a minimum\n  viable web server with netcat\n* Rack applications, middleware, and how they're typically chained\n  together\n* How Rails chains together rack middleware to do what it does\n  (i.e. tracing the code path of a request from class Railtie all\n  the way down to your apps controllers).\nThere will be live coding, so I request that you sacrifice a\nllama or three in the name of the demo gods before the event.",
      "year": "2013",
      "month": "december"
    },
    {
      "title": "Better security for your web applications",
      "author": "Najaf Ali",
      "author_link": "http://happybearsoftware.com",
      "coverage": "{::coverage year=\"2013\" month=\"april\" talk=\"better-security-for-your-web-applications\" /}",
      "summary": "He'll be covering:\n* How to improve the quality of your software by thinking like an attacker.\n* Technical walkthroughs of real-life vulnerabilities.\n* Practical tips for keeping your software secure over the long term.",
      "year": "2013",
      "month": "april"
    }
  ],
  "Tom Cartwright": [
    {
      "title": "A guide to connascence",
      "author": "Tom Cartwright",
      "author_link": "https://twitter.com/tomcartwrightuk",
      "coverage": null,
      "summary": "Connascence is a useful software quality metric that helps you identify\nthe types and strengths of coupling within a system. I will show you how to\nassess connascence and I'll suggest how using the metric can help you improve\nthe quality of your code.",
      "year": "2017",
      "month": "january"
    },
    {
      "title": "PeerConnect all the things",
      "author": "Tom Cartwright",
      "author_link": "http://www.tomcartwright.net/",
      "coverage": "{::coverage year=\"2015\" month=\"january\" talk=\"peerconnect-all-the-things\" /}",
      "summary": "[WebRTC](http://www.webrtc.org/) is an exciting technology currently in, or coming\nsoon to a browser near you. In this talk I will explain what\nit is, how it works and how to setup some ruby services to\nsupport a WebRTC-based application.",
      "year": "2015",
      "month": "january"
    },
    {
      "title": "How to parse 'go'",
      "author": "Tom Cartwright",
      "author_link": "http://www.tomcartwright.net/",
      "coverage": null,
      "summary": "Ruby is not the first language you might think turn\nto when tackling natural language processing problems.\nBut it has a lot of features that make it suitable\nfor NLP tasks and a number of gems are being actively\nmaintained. This talk introduces those features and gems\nand discusses how you can build solutions to your\nlanguage processing problems within your Ruby-based apps.",
      "year": "2013",
      "month": "november"
    }
  ],
  "Amy Phillips": [
    {
      "title": "A way to think about bugs",
      "author": "Amy Phillips",
      "author_link": "https://twitter.com/itjustbroke",
      "coverage": null,
      "summary": "Bugs. Bugs reports. Jira. Dirty, dirty words. Or are they? In this\nalternative view of bugs we'll see how bug reports can be turned into\nsomething positive for developers and development teams. Treated right a bug\nreport can be a powerful trigger for changing technology, process, and even\nyourself.",
      "year": "2017",
      "month": "february"
    }
  ],
  "Ryan MacGillivray": [
    {
      "title": "Doing bad things in Postgres for fun and profit",
      "author": "Ryan MacGillivray",
      "author_link": "https://twitter.com/RyanMacG",
      "coverage": null,
      "summary": "A brief glimpse at the unwise things you can do with the Postgres array\ndatatype.",
      "year": "2017",
      "month": "february"
    }
  ],
  "Kaitlyn Tierney": [
    {
      "title": "A (Pointed) Guide to Beer",
      "author": "Kaitlyn Tierney",
      "author_link": "https://twitter.com/krtierney",
      "coverage": null,
      "summary": "There are hundreds of beer styles from all over the world. This very brief\nintroduction to beer will enumerate a few of them: how they’re made, what\nthey taste like, and when to drink them.",
      "year": "2017",
      "month": "february"
    }
  ],
  "Guy Boertje": [
    {
      "title": "Logstash: JRuby and Java at Elastic",
      "author": "Guy Boertje",
      "author_link": "https://twitter.com/guyboertje",
      "coverage": null,
      "summary": "I will talk for a bit about what it is like to develop\n[Logstash](https://www.elastic.co/products/logstash), a data ingestion\napplication, part of the open source Elastic Stack. At 12+ million downloads\nand tens of thousands of daily users, Logstash is very popular. We\nmanage/code 160+ Github repos.",
      "year": "2017",
      "month": "february"
    }
  ],
  "Lola Odelola": [
    {
      "title": "Small Steps to Finding Your Dream Job",
      "author": "Lola Odelola",
      "author_link": "https://twitter.com/lolaodelola",
      "coverage": null,
      "summary": "A few tips on how to find a job you'll love",
      "year": "2017",
      "month": "february"
    },
    {
      "title": "Empathetech",
      "author": "Lola Odelola",
      "author_link": "https://twitter.com/lolaodelola",
      "coverage": null,
      "summary": "",
      "year": "2017",
      "month": "august"
    }
  ],
  "Paul Battley": [
    {
      "title": "Base WTF",
      "author": "Paul Battley",
      "author_link": "https://twitter.com/threedaymonk",
      "coverage": null,
      "summary": "If you've done much programming, you've probably worked with binary,\nhexadecimal, and perhaps octal in addition to normal decimal numbers. But\nwhat about base three? And what about base three with a twist, where each\ndigit can be positive or negative? Why would you even want to do that? It\nreally exists, it's called Balanced Ternary, and it has some interesting\nproperties.",
      "year": "2017",
      "month": "february"
    },
    {
      "title": "Battleship: Ruby Fight Club",
      "author": "Paul Battley",
      "author_link": "http://po-ru.com/",
      "coverage": null,
      "summary": "",
      "year": "2011",
      "month": "october"
    },
    {
      "title": "Ten Things I Hate About Rails",
      "author": "Paul Battley",
      "author_link": "http://po-ru.com/",
      "coverage": null,
      "summary": "",
      "year": "2006",
      "month": "november"
    }
  ],
  "Tom Wey": [
    {
      "title": "Ch-ch-ch-ch-Changes: Avoiding mutable state in Ruby and why you might want to.",
      "author": "Tom Wey",
      "author_link": "https://twitter.com/tjmwy",
      "coverage": null,
      "summary": "A few examples and techniques for avoiding mutable state in Ruby, and\nhow this might make your code clearer and easier to test. Slightly\ninspired by getting more into functional programming languages.",
      "year": "2017",
      "month": "february"
    }
  ],
  "Xavier Riley": [
    {
      "title": "Everyday cryptography - talking about crypto without complex maths",
      "author": "Xavier Riley",
      "author_link": "https://twitter.com/xavriley",
      "coverage": null,
      "summary": "Good cryptography is hard, but learning the basic concepts don't have to\nhave to be. By focussing on the key concepts, rather than the exotic maths,\nI hope we can initiate more people into understanding what good security\nlooks like without having to take a University course. For those who already\nknow their MACs from their IKEs, I hope this talk offers some useful ways\nof communicating these concepts to colleagues, friends and family.",
      "year": "2017",
      "month": "december"
    },
    {
      "title": "Say hello to Padrino",
      "author": "Xavier Riley",
      "author_link": "https://twitter.com/xavriley",
      "coverage": "{::coverage year=\"2013\" month=\"april\" talk=\"say-hello-to-padrino\" /}",
      "summary": "Rails showed us the power of the full-stack framework.\nIt was good, but some of us felt the power was at the\nexpense of lightness (and joy?).\nSinatra showed us the joy of simple. The bare essentials\nto start working with http requests gave us back some\nof the Zen of creating a codebase that did exactly what\nit should and nothing more. Sadly, this Zen meant\nreinventing wheels that Rails had already rolled.\nPadrino came after both of these projects and the\ndevelopers learnt from them. They re-imagined the\nfull stack using Sinatra as a base and building from\nthere. Sinatra++ you might think.",
      "year": "2013",
      "month": "april"
    }
  ],
  "Miles Woodroffe": [
    {
      "title": "Fun with an Amazon Echo, Ruby and Recipes",
      "author": "Miles Woodroffe",
      "author_link": "https://twitter.com/tapster",
      "coverage": null,
      "summary": "Voice interfaces open up so many interesting possibilities and in this talk\nI'll show you how to very quickly build and deploy a useful \"skill\" with\nRuby, and at the same time, make sure you hopefully don't burn the dinner.",
      "year": "2017",
      "month": "december"
    }
  ],
  "Marek Labos": [
    {
      "title": "How I met \"Double Dutch\" and he helped to remedy fear of injection.",
      "author": "Marek Labos",
      "author_link": "https://twitter.com/marek_public",
      "coverage": null,
      "summary": "The story about how ideas from other languages can help us write\nsimple, elegant Ruby code.  In this presentation we will look at a Double Dispatch pattern,\nExcel(spreadsheet) injection, how they go together and why fighting\n(accidental) code complexity matters.",
      "year": "2017",
      "month": "december"
    }
  ],
  "Adam Lancaster": [
    {
      "title": "Let the Cats out of the bag",
      "author": "Adam Lancaster",
      "author_link": "https://twitter.com/ItizAdz",
      "coverage": null,
      "summary": "A talk about cats, boxes and category theory.  Do you lie awake at night\nthinking about monads? Do you wonder why the identity of the exclusive\n`OR` Monoid is false? No, of course not... because you're still not sure\nwhat the hell they are! Allow me to explain with a beginner friendly\nintroduction to Category Theory - with cats! And may your dreams once\nagain be full of maths.",
      "year": "2017",
      "month": "august"
    }
  ],
  "Phil Cowans": [
    {
      "title": "GraphQL in Ruby",
      "author": "Phil Cowans",
      "author_link": "https://twitter.com/philcowans",
      "coverage": null,
      "summary": "At Nested we've recently moved from traditional RESTful APIs to a Ruby\nGraphQL back end. In this talk we'll share our experience making the\ntransition and using GraphQL for a real-world app.",
      "year": "2017",
      "month": "august"
    },
    {
      "title": "ActionEmbedding",
      "author": "Phil Cowans",
      "author_link": "http://twitter.com/philcowans",
      "coverage": null,
      "summary": "ActionEmbedding is a simple Rails plugin I've been using to look at\nways of building up pages from independent user interface elements\ncalled pagelets. The idea is to implement a number of different patterns,\nincluding Hierarchical MVC, and make it as easy as possible to switch\nbetween them. I'll try to explain why I think this is a good idea, show\nyou what the plugin can do at the moment and talk about how I see it evolving.",
      "year": "2010",
      "month": "july"
    }
  ],
  "Patrick Gleeson": [
    {
      "title": "Why Writing Software Is Nothing Like Building A House",
      "author": "Patrick Gleeson",
      "author_link": "http://patrickgleeson.com/",
      "coverage": null,
      "summary": "A brief exploration of the problems intrinsic to software project\nmanagement, and a couple of suggestions for how we coders can help\nour non-technical colleagues get round them.",
      "year": "2017",
      "month": "august"
    }
  ],
  "Ioan Serban": [
    {
      "title": "Mobile Journey at FreeAgent",
      "author": "Ioan Serban",
      "author_link": "https://twitter.com/dragossh",
      "coverage": null,
      "summary": "Taking a journey from 2012 to the present, you will find out how FreeAgent\nended up with a hybrid App Store solution and the process involved in\nbuilding & shipping it: our initial Rails-based explorations, the making\nof a hybrid app, how we structure the codebase, using the Asset Pipeline\nto compile & deploy a non-Rails app, moving from CoffeeScript to ES6, and\nwhether the Asset Pipeline is a good fit for such an app.",
      "year": "2017",
      "month": "april"
    }
  ],
  "Rosa Fox": [
    {
      "title": "Live Coding",
      "author": "Rosa Fox",
      "author_link": "https://twitter.com/rosaemerald",
      "coverage": null,
      "summary": "A whirlwind exploration of how ’going live’ either online (all the rage on\nsocial media!) or in the flesh is being applied to coding.",
      "year": "2017",
      "month": "april"
    },
    {
      "title": "Becoming a Developer & Codebar",
      "author": "Rosa Fox",
      "author_link": "http://www.techfox.co.uk/",
      "coverage": "{::coverage year=\"2014\" month=\"july\" talk=\"becoming-a-developer-codebar\" /}",
      "summary": "A short talk about my experience starting out as a professional\ndeveloper. The focus of this talk will be about a weekly event\nthrough which I received a huge amount of support called [Codebar](http://codebar.io).\nAt Codebar programming skills are taught for free to people\nunderrepresented in the tech industry.",
      "year": "2014",
      "month": "july"
    }
  ],
  "Ismael Celis": [
    {
      "title": "Practical hypermedia APIs in Ruby",
      "author": "Ismael Celis",
      "author_link": "https://twitter.com/ismasan",
      "coverage": null,
      "summary": "Ismael will share their experience building hypermedia APIs in Ruby.\nWhat matters, what doesn’t, and what implications the approach might have\non the way you design server code, client implementations and documentation.",
      "year": "2017",
      "month": "april"
    },
    {
      "title": "Building a SOA network of daemons with Go, Ruby and ZMQ",
      "author": "Ismael Celis",
      "author_link": "http://home.ismaelcelis.com/",
      "coverage": "{::coverage year=\"2014\" month=\"march\" talk=\"building-a-soa-network-of-daemons-with-go-ruby-and-zmq\" /}",
      "summary": "I would like to talk about a series of custom-made infrastructure\ncomponents that I’ve built over several months to support a hosted\ne-commerce app that I run in my spare time.\nThis consists of a central events hub written in Go, to which the\nuser-facing apps send events, and a series of Go and Ruby scripts\nsubscribing to said events on a ZMQ socket and doing varied things\nsuch as analytics, periodical backups and house-keeping.\nThe code I’ll show is mostly Go, with some Ruby to illustrate how\nthis all hooks in to my Ruby apps and existing infrastructure. I’ll\ntry to show why Go is great for writing small, focused scripts that\nsupport your user facing apps.",
      "year": "2014",
      "month": "march"
    }
  ],
  "Josh Hill": [
    {
      "title": "Working together",
      "author": "Josh Hill",
      "author_link": "https://twitter.com/jamesjoshuahill",
      "coverage": "{::coverage year=\"2016\" month=\"september\" talk=\"working-together\" /}",
      "summary": "Josh heard about pair programming a few years ago and tried it a few\ntimes. Last year, he jumped in and started pairing full-time. Working so\nclosely with clients, colleagues, juniors and seniors was challenging. Now he\nenjoys pairing more than flying solo and has seen the benefits for himself\nand his teammates. This talk is about the challenges and benefits of working\nmore closely with one another.",
      "year": "2016",
      "month": "september"
    }
  ],
  "David Salgado": [
    {
      "title": "Total Rewrite",
      "author": "David Salgado",
      "author_link": "https://twitter.com/digitalronin",
      "coverage": "{::coverage year=\"2016\" month=\"september\" talk=\"total-rewrite\" /}",
      "summary": "Patterns and anti-patterns for when you're replacing your entire codebase,\nand reasons why doing that is (usually) a very bad idea.",
      "year": "2016",
      "month": "september"
    },
    {
      "title": "Elixir for Rubyists",
      "author": "David Salgado",
      "author_link": "https://digitalronin.github.io/",
      "coverage": "{::coverage year=\"2016\" month=\"march\" talk=\"elixir-for-rubyists\" /}",
      "summary": "The Elixir programming language  has been generating\na lot of buzz in the Ruby community recently. This presentation gives an\nintroduction to Elixir, discussing some of the things that make it so popular\namong rubyists, and outlining a few of the similarities and differences\nbetween Elixir and Ruby.",
      "year": "2016",
      "month": "march"
    }
  ],
  "Charlie Egan": [
    {
      "title": "Development Re-bundling in Dockerland",
      "author": "Charlie Egan",
      "author_link": "https://twitter.com/charlieegan3",
      "coverage": "{::coverage year=\"2016\" month=\"october\" talk=\"development-re-bundling-in-dockerland\" /}",
      "summary": "For almost a year I've enjoyed using Docker and docker-compose to work on\nvarious Ruby projects. However - bundle installations when building images\nhave been always been painful. This talk is about exploring the rather\nunsatisfactory options available to speed up the process of \"development\nre-bundling\".",
      "year": "2016",
      "month": "october"
    }
  ],
  "Chris Radford": [
    {
      "title": "A month of I18n in 10 minutes",
      "author": "Chris Radford",
      "author_link": "https://twitter.com/chrisradford",
      "coverage": null,
      "summary": "Translating websites has been A Thing(tm) since the earliest days of the\nweb, so how does it take over a month to translate a website with less\nthan a dozen pages? In this talk Chris walks us through the minefield of\ninternationalisation and some of the common pitfalls of translating a\nwebsite.",
      "year": "2016",
      "month": "october"
    }
  ],
  "Emma Beynon": [
    {
      "title": "Joining the mob: Top 12 mob programming tips and thoughts",
      "author": "Emma Beynon",
      "author_link": "https://twitter.com/emmabeynon",
      "coverage": null,
      "summary": "What happens when you get 5 developers to work on the same problem on the\nsame computer at the same time?  Emma's team at GDS took collaboration to\nthe next level by trying out mob programming. Find out what they learned\nfrom their mobbing experience, and take away a few tips to try it in your\nteam.",
      "year": "2016",
      "month": "october"
    }
  ],
  "Murray Steele": [
    {
      "title": "An open-source contribution story",
      "author": "Murray Steele",
      "author_link": "https://twitter.com/hlame",
      "coverage": null,
      "summary": "A short story about a contribution I made to rubygems that took a couple\nof years. And how that's totally ok.",
      "year": "2016",
      "month": "october"
    },
    {
      "title": "\"My First Ruby\"",
      "author": "Murray Steele",
      "author_link": "http://h-lame.com/",
      "coverage": "{::coverage year=\"2010\" month=\"june\" talk=\"my-first-ruby\" /}",
      "summary": "1. It's a mailing list with a web front-end.  The web stuff is pre-rails and I think it's interesting in terms of \"look how far we've come\".  Seriously, if you've never done web development without a higher-level framework like rails you'll be amazed.  (For anyone who's heard of it, it uses [NARF](http://sourceforge.net/projects/narf-lib/)).\n2. I can pretty much guarantee that my first ruby code is worse than your first ruby code.  So for any newbies in the room, it should come as welcome relief that even apparent old-hands like myself have written terrible code (and it truly is terrible code), made terrible design decisions, and done both without the safety net of TDD.  Of course, hopefully in the talk I'll point out why, if writing this again, I would use TDD.  At the end I hope this talk will make people feel less embarrassed about showing off code of their own at future events; I'll be setting a base-level of awfulness.\n3. This bit of software was written in a weekend and has been in \"production\" for  7 years 11 months (according to the date I filled in for \"when I first started using Ruby\" on my Working With Rails profile) and it's been remarkably stable and unchanged for those 7 years.  I've no real evidence for this, but it's a scientific fact that it's the longest running piece of ruby software in the world... wouldn't you like to see inside it?",
      "year": "2010",
      "month": "june"
    }
  ],
  "Luke Morton": [
    {
      "title": "The invisible cost of code",
      "author": "Luke Morton",
      "author_link": "https://twitter.com/lukemorton",
      "coverage": null,
      "summary": "Every line of code has cost associated with it. The cost of writing it. The\ncost of testing it. Deploying it. Reading it. Changing it later. I'd like to\nidentify some of the costs and suggest ways of reducing them. Hint: write\nless code in the first place.",
      "year": "2016",
      "month": "november"
    }
  ],
  "Asfand Yar Qazi": [
    {
      "title": "A Tale of Two Deployments - Machine Images, Immutable Servers And Green/Blue Deployment",
      "author": "Asfand Yar Qazi",
      "author_link": "http://www.thedevopsdoctors.com/",
      "coverage": "{::coverage year=\"2016\" month=\"may\" talk=\"a-tale-of-two-deployments-machine-images-immutable-servers-and-green-blue-deployment\" /}",
      "summary": "Imagine some of the worst things that could happen to you during `cap deploy`\n-- well, they happened to Ali on the same day, and it turned into one of the\nworst days of his life. Interestingly, Sally in the office across the street\nhad the exact same issues come up during her deployment. However her team had\ninvested in their infrastructure sensibly, and deployed fresh immutable\nserver clusters from pre-built machine images on each deploy. She could just\nrelax, as the infrastructure had been designed to filter out most problems\nthat could occur during deployment. Here is their story!",
      "year": "2016",
      "month": "may"
    }
  ],
  "Matthew Ford": [
    {
      "title": "Convox: Painless deployment of Docker on AWS",
      "author": "Matthew Ford",
      "author_link": "https://twitter.com/matthewcford",
      "coverage": null,
      "summary": "Bit Zesty have been playing with Docker to help with Dev/Prod parity, but\ndeploying and managing Docker images in production has been a pain. Convox\nhelps by providing a simple Heroku-esque CLI to deploy and manage your\napplication on AWS. We've been able to replace a bunch of terraform +\nchef/ansible scripts and use Docker in production without the headache.",
      "year": "2016",
      "month": "may"
    }
  ],
  "Daniel Magliola is going to tell us about Redis": [
    {
      "title": "The full power of Redis",
      "author": "Daniel Magliola is going to tell us about Redis",
      "author_link": "Daniel Magliola is going to tell us about http://redis.io/",
      "coverage": "{::coverage year=\"2016\" month=\"march\" talk=\"the-full-power-of-redis\" /}",
      "summary": "The vast majority of projects use Redis like it's Memcached, but Redis can\ngive so much more. In this talk I'll give practical examples of use cases\nwhere Redis outshines everything else I've tried.",
      "year": "2016",
      "month": "march"
    }
  ],
  "Kimberley Cook": [
    {
      "title": "A reintroduction to codebar",
      "author": "Kimberley Cook",
      "author_link": "https://twitter.com/kimberleycook91",
      "coverage": "{::coverage year=\"2016\" month=\"march\" talk=\"a-reintroduction-to-codebar\" /}",
      "summary": "In this talk I will discuss what codebar is, how we have expanded over the\nlast 2 years and how you can help us improve.",
      "year": "2016",
      "month": "march"
    }
  ],
  "Jo Pearce": [
    {
      "title": " Hacking Your Head : Managing Information Overload",
      "author": "Jo Pearce",
      "author_link": "https://twitter.com/jdpearce",
      "coverage": "{::coverage year=\"2016\" month=\"june\" talk=\"hacking-your-head-managing-information-overload\" /}",
      "summary": "There are limits to our ability to learn and process\ninformation. Overload impacts productivity by causing psychological\nand physiological stress. I’ll relate findings from cognitive\npsychology that help us understand how, as developers, we might be\noverloading ourselves and what to do about it.",
      "year": "2016",
      "month": "june"
    }
  ],
  "Rob Kitromilides": [
    {
      "title": "Open Sesame: A beginners guide to passwords",
      "author": "Rob Kitromilides",
      "author_link": "https://twitter.com/robkitro",
      "coverage": "{::coverage year=\"2016\" month=\"june\" talk=\"open-sesame-a-beginners-guide-to-passwords\" /}",
      "summary": "What goes on when you log in to a website? How does it work? Why should\nyou care?",
      "year": "2016",
      "month": "june"
    }
  ],
  "Tom Close": [
    {
      "title": "Refactoring a monolith with rails engines",
      "author": "Tom Close",
      "author_link": "https://github.com/tomclose",
      "coverage": "{::coverage year=\"2016\" month=\"june\" talk=\"refactoring-a-monolith-with-rails-engines\" /}",
      "summary": "12 months ago we were facing a number of problems familiar in an early\nstage startup:\n* a monolithic codebase that had accumulated a lot of technical debt\n* a requirement to handle complex business processes that were changing\n  quickly as the business scaled\n* a growing development team struggling to enable new hires to be effective\n  quickly\nWe initially considered moving to a micro-service architecture but eventually\nsettled on using rails engines to refactor our monolith, allowing us to make\nimmediate gains in productivity whilst avoiding the operational complexity of\na distributed system. The talk will cover the approach we are taking in this\n(ongoing) refactor, the rules we found we needed to play by, and the lessons\nwe learned along the way.",
      "year": "2016",
      "month": "june"
    }
  ],
  "Tom Kadwill": [
    {
      "title": "Documenting Ruby APIs",
      "author": "Tom Kadwill",
      "author_link": "https://twitter.com/tomkadwill",
      "coverage": "{::coverage year=\"2016\" month=\"july\" talk=\"documenting-ruby-apis\" /}",
      "summary": "In this talk I will provide a short comparison of the popular API\ndocumentation tools available for Ruby. I'll explain how you can use them to\ngenerate API documentation for your own projects.",
      "year": "2016",
      "month": "july"
    }
  ],
  "Edd Sowden": [
    {
      "title": "Integrating React into a Rails application",
      "author": "Edd Sowden",
      "author_link": "https://twitter.com/edds",
      "coverage": "{::coverage year=\"2016\" month=\"july\" talk=\"integrating-react-into-a-rails-application\" /}",
      "summary": "Looking at how you can start using [React](https://facebook.github.io/react/)\nwithin a Rails environment, why you might want to, and what benefits it can\nunlock. Also looking at how you can make this change to a large project which\nlots of developers contribute to regularly.",
      "year": "2016",
      "month": "july"
    }
  ],
  "Andy White": [
    {
      "title": "From monolith to microservices: A true story",
      "author": "Andy White",
      "author_link": "http://andywhite.org",
      "coverage": "{::coverage year=\"2016\" month=\"january\" talk=\"from-monolith-to-microservices-a-true-story\" /}",
      "summary": "How we moved from a huge Rails monolith to small microservices - the how and\nthe why.",
      "year": "2016",
      "month": "january"
    }
  ],
  "Neil Robertson": [
    {
      "title": "The journey to Primed.is",
      "author": "Neil Robertson",
      "author_link": "https://twitter.com/Whatthenar",
      "coverage": "{::coverage year=\"2016\" month=\"january\" talk=\"the-journey-to-primed-is\" /}",
      "summary": "Primed.is - improving recruitment pain\nRecruitment is a pain, isn't it? Does it have to be this way? We say\n'no' and we want to show you why. Primed.is a web application to\ntackle common recruitment problems and we can't wait to tell you all\nabout it.\nA Guide to Becoming a Ruby on Rails Developer\nAfter working as a Flash developer and team lead for 10 years I have\nswitched to become a Ruby on Rails developer to build our new product,\nPrimed. This is the talk I would like to have heard a year ago when I\nwas beginning that journey.",
      "year": "2016",
      "month": "january"
    }
  ],
  "Jonas Pfenniger Chevalier": [
    {
      "title": "Using direnv with ruby and 12factor apps",
      "author": "Jonas Pfenniger Chevalier",
      "author_link": "http://zimbatm.com",
      "coverage": "{::coverage year=\"2016\" month=\"january\" talk=\"using-direnv-with-ruby-and-12factor-apps\" /}",
      "summary": "[direnv](http://direnv.net) is a language-agnostic environment switching tool\nthat I wrote a 5 years ago and still use every day.\nThis talk is going to present the tool and it's capabilities, and then explore\nhow it can be used by ruby developers. Hopefully it will be useful to you in\nthe everyday life as a developer, or just spark some interesting\nconversations.",
      "year": "2016",
      "month": "january"
    }
  ],
  "Mark Burns": [
    {
      "title": " Software architecture analysis with runtime type detection in ruby",
      "author": "Mark Burns",
      "author_link": "https://twitter.com/_mark_burns",
      "coverage": null,
      "summary": "The six lesser-known SOLID (packaging) principles, Connascence, and tooling\nfor runtime type analysis in ruby. Summarised in haiku form as:\n    Fitting code on screen\n    Makes developers happy;\n    A hypothesis.",
      "year": "2016",
      "month": "december"
    },
    {
      "title": "Mark Burns: HATEOAS",
      "author": "Mark Burns",
      "author_link": "http://twitter.com/_mark_burns",
      "coverage": null,
      "summary": "I've been trying to understand the [HATEOAS](http://en.wikipedia.org/wiki/HATEOAS) constraint myself. \n[Roy Fielding's blog posts](http://roy.gbiv.com/untangled/tag/rest) are almost indecipherable to an \nordinary developer like me. I think there's a huge gap in relevant easily accessible information on \nunderstanding it, and how to implement it, what it's benefits are etc.\nOne of the aspects that I've found particularly confusing is the concept of not having out-of-band \ncommunication and having discoverable APIs. \nIn [one particular blog post](http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven) Roy says:\nI'd like to talk about how this limitation on out-of-band information seems both insane and \nimpractical, maybe impossible. But then I may go on to explore how actually it makes some \nform of sense. And how you can use this knowledge to write APIs that are easier to code to, \nand whilst not resilient to change in some magical sense, it should allow you to write clients\nthat are easier to adapt and update.",
      "year": "2011",
      "month": "december"
    }
  ],
  "Claire Tran": [
    {
      "title": " Ruby as a Learning Language",
      "author": "Claire Tran",
      "author_link": "https://twitter.com/clairettran",
      "coverage": null,
      "summary": "Exploring why Ruby is one of the languages which people use to start\nlearning programming.",
      "year": "2016",
      "month": "december"
    }
  ],
  "Simon Coffey": [
    {
      "title": "An A/B test is for life, not just for Christmas",
      "author": "Simon Coffey",
      "author_link": "https://twitter.com/urbanautomaton",
      "coverage": null,
      "summary": "A/B tests are simple: you have a change you want to make; you define what\n\"conversion\" is; you randomly show the change to half your users, and see\nif \"conversion\" goes up or down with the change. But what if the effects\nare more complex?\nI'll talk about an experiment we ran that initially targeted a single\nmeasure of conversion but had some knock-on effects, and how we were able\nto study them. I'll share some very easy things you can do right away to\nget more information out of your A/B tests, and hopefully convince you\nthere's more to them than deciding on some copy, or the colour of a button.",
      "year": "2016",
      "month": "december"
    },
    {
      "title": "Test Bisection with RSpec",
      "author": "Simon Coffey",
      "author_link": "https://twitter.com/urbanautomaton",
      "coverage": "{::coverage year=\"2015\" month=\"june\" talk=\"test-bisection-with-rspec\" /}",
      "summary": "I'll talk about a useful technique for debugging order-dependent test\nfailures, and introduce an upcoming feature in RSpec that automates it.",
      "year": "2015",
      "month": "june"
    },
    {
      "title": "The reluctant Chef",
      "author": "Simon Coffey",
      "author_link": "https://twitter.com/urbanautomaton",
      "coverage": "{::coverage year=\"2013\" month=\"july\" talk=\"the-reluctant-chef\" /}",
      "summary": "Most developers don't do ops, and though the idea of devops\nis slowly permeating through the industry, it's probably\nnot the norm yet. So why should we, as devs, care about\nconfiguration management? What has it done for us lately?\nI'll try to explain how Chef can improve your life, even if\nyou never touch a production server. I'll give some\nexamples of ways in which configuration management can\nsimplify your development environment, improve your\ndebugging abilities, and give you a better overall\nunderstanding of the way your applications fit together.\nI'll also share some strategies for breaking down the\nintimidating task of introducing Chef if you've already got\nhand-configured servers, so that change can be gradual,\nwith progress along the way as nature intended. I'll also\nmention some of the tools that make life much, much simpler.",
      "year": "2013",
      "month": "july"
    }
  ],
  "Melinda Seckington": [
    {
      "title": "The Marvel Guide to Developers",
      "author": "Melinda Seckington",
      "author_link": "https://missgeeky.com",
      "coverage": "{::coverage year=\"2016\" month=\"august\" talk=\"the-marvel-guide-to-developers\" /}",
      "summary": "Forget ninja developers and rockstar developers. What I'm more interested in\nis the superhero developer: these are the developers that do their best to\nhelp others, that try to give back to their community, and generally make the\nworld a better place.\nSo how can we all strive to be superhero developers? Using the origin stories\nand lessons from Marvel superheroes, this talk will help you become the type\nof developer that amplifies and helps others.",
      "year": "2016",
      "month": "august"
    },
    {
      "title": "Un-artificial Intelligence: How People Learn",
      "author": "Melinda Seckington",
      "author_link": "https://missgeeky.com/",
      "coverage": "{::coverage year=\"2015\" month=\"april\" talk=\"un-artificial-intelligence-how-people-learn\" /}",
      "summary": "Most developers are familiar with the basics of AI: how do you make a\ncomputer, an algorithm, a system learn something? What most don't\nrealize though is that the same principles are applied to people. This\ntalk looks at the theory behind how people learn, and maps it to real\nlife examples of how specifically developers learn.",
      "year": "2015",
      "month": "april"
    }
  ],
  "Dr Chris Seaton": [
    {
      "title": "JRuby+Truffle: A faster but simpler new Ruby",
      "author": "Dr Chris Seaton",
      "author_link": "http://chrisseaton.com/",
      "coverage": "{::coverage year=\"2016\" month=\"april\" talk=\"jruby-truffle-a-faster-but-simpler-new-ruby\" /}",
      "summary": "JRuby+Truffle is a new Ruby interpreter from Oracle Labs. While it uses\ncutting-edge compiler technology to achieve high performance, the concepts\nand implementation of most of JRuby+Truffle are actually rather simple -\nsimpler than MRI, JRuby or Rubinius, and needing only techniques that can be\nexplained in a few slides.",
      "year": "2016",
      "month": "april"
    }
  ],
  "Jonny Arnold": [
    {
      "title": "Doing Things Differently at Reevoo",
      "author": "Jonny Arnold",
      "author_link": "https://twitter.com/JonnyArnold89",
      "coverage": "{::coverage year=\"2016\" month=\"april\" talk=\"doing-things-differently-at-reevoo\" /}",
      "summary": "Reevoo is already an Agile company: we have JIRA Agile, so we must be, right?\nA few months ago we set out on a greenfield project, and decided to do things\ndifferently. What would happen when we went back to sticky notes and\nwhiteboards for planning? Could we deliver on time for a project if we never\nset a deadline? And what happens when half of the development team changes\nevery two weeks? Come along to our public retrospective on what went well and\nwhat we would never do again.",
      "year": "2016",
      "month": "april"
    }
  ],
  "Chris Blackburn": [
    {
      "title": "Continuous Feedback",
      "author": "Chris Blackburn",
      "author_link": "https://twitter.com/burgersnatch",
      "coverage": "{::coverage year=\"2016\" month=\"april\" talk=\"continuous-feedback\" /}",
      "summary": "How we left behind old-fashioned performance reviews by applying the things\nwe're taught to value in modern software delivery to our people.",
      "year": "2016",
      "month": "april"
    }
  ],
  "Tatiana Soukiassian": [
    {
      "title": "A pull request slackbot : the seal",
      "author": "Tatiana Soukiassian",
      "author_link": "https://twitter.com/binaryberry",
      "coverage": "{::coverage year=\"2015\" month=\"september\" talk=\"a-pull-request-slackbot-the-seal\" /}",
      "summary": "As part of my 20% project at GDS, I developed a Slackbot that reminds\ndevelopers of their team's pull requests that are awaiting review. I\nwill talk about why and how [the seal](https://github.com/binaryberry/seal/)\nwas built, and what I learned from building it.",
      "year": "2015",
      "month": "september"
    }
  ],
  "Alice Bartlett": [
    {
      "title": "Debugging and fixing performance issues with the mustache gem and partials",
      "author": "Alice Bartlett",
      "author_link": "https://twitter.com/alicebartlett",
      "coverage": "{::coverage year=\"2015\" month=\"october\" talk=\"debugging-and-fixing-performance-issues-with-the-mustache-gem-and-partials\" /}",
      "summary": "A quick blast through encountering a feature with performance in the\nmustache gem. How we debugged it and how we fixed it. This talk will be\na bit less boring than it sounds.",
      "year": "2015",
      "month": "october"
    }
  ],
  "Jonas Huckestein": [
    {
      "title": "API-first banking",
      "author": "Jonas Huckestein",
      "author_link": "https://twitter.com/jonas",
      "coverage": "{::coverage year=\"2015\" month=\"october\" talk=\"api-first-banking\" /}",
      "summary": "What would you build on top of your bank if it had a REST API & Webhooks? At Mondo, we're looking forward to finding out. Our API (plus Ruby client library) is in beta ([docs here](https://getmondo.co.uk/docs/)), and we hosted our first hackathon a couple of weeks ago. Come along to find out what people built!",
      "year": "2015",
      "month": "october"
    }
  ],
  "Stanisław Klajn": [
    {
      "title": "ActiveRecord vs N+1",
      "author": "Stanisław Klajn",
      "author_link": "http://stackoverflow.com/users/2336231/broisatse",
      "coverage": "{::coverage year=\"2015\" month=\"october\" talk=\"activerecord-vs-n-1\" /}",
      "summary": "In this talk would like to focus on dealing with N+1: how to detect it,\nhow to get rid of it and, most importantly, how to avoid it.",
      "year": "2015",
      "month": "october"
    }
  ],
  "Kevin Monk": [
    {
      "title": "No-Man’s Land - Finding peace at the border of art and tech",
      "author": "Kevin Monk",
      "author_link": "https://twitter.com/KevinMonk",
      "coverage": "{::coverage year=\"2015\" month=\"november\" talk=\"no-man-s-land-finding-peace-at-the-border-of-art-and-tech\" /}",
      "summary": "However good the underlying tech, ugly applications discourage users, pretty\nones will attract them. A gulf exists between the artists and the technicians\nwho need to bring those designs to life. Co-presented by a graphic designer\nand a developer, we’ll discuss our approach to keeping both artists and\ntechnicians within their comfort zone to create applications that work well\nAND look good.",
      "year": "2015",
      "month": "november"
    }
  ],
  "Sabrina Leandro": [
    {
      "title": "Rewriting Code and Culture",
      "author": "Sabrina Leandro",
      "author_link": "http://saleandro.com/",
      "coverage": "{::coverage year=\"2015\" month=\"may\" talk=\"rewriting-code-and-culture\" /}",
      "summary": "This is the story of a company that survived a much needed\ntransformation of its product and codebase, but most importantly, of\nits culture. There's no real prescription for being agile. It's about\nthe journey a team takes to discover how to best work together and\ndeliver great products.\nIn this presentation, I'll share a candid view of a team trying to\novercome a slow product development process. How we refactored our way\nout of badly coupled code, moved to continuous deployment, and greatly\nimproved our approach to product and software development.",
      "year": "2015",
      "month": "may"
    }
  ],
  "Kamil Lelonek": [
    {
      "title": "Rails New Way",
      "author": "Kamil Lelonek",
      "author_link": "http://kamil.lelonek.me/",
      "coverage": "{::coverage year=\"2015\" month=\"may\" talk=\"rails-new-way-building-blocks-for-modern-rails-architecture\" /}",
      "summary": "",
      "year": "2015",
      "month": "may"
    }
  ],
  "Paul Mucur": [
    {
      "title": "Exploring #to_proc",
      "author": "Paul Mucur",
      "author_link": "http://mudge.name/",
      "coverage": "{::coverage year=\"2015\" month=\"march\" talk=\"exploring-to-proc\" /}",
      "summary": "A look at how some \"odd syntax\" [introduced in Rails 1.1](https://github.com/rails/rails/commit/69bf71f5e9b537f88acc0d4492a057336e7305d1) and\nthen [added to Ruby itself](https://github.com/ruby/ruby/commit/ac4d6ddfa3219c212d2865ed600a0ab568d5f0b5) might not solely be for the sake of\nconvenience but hint at a more powerful idea seen in other\nprogramming languages.",
      "year": "2015",
      "month": "march"
    },
    {
      "title": "Managing Web Application Servers with Puppet",
      "author": "Paul Mucur",
      "author_link": "http://mudge.name",
      "coverage": "{::coverage year=\"2011\" month=\"august\" talk=\"managing-web-application-servers-with-puppet\" /}",
      "summary": "Joshua Sierles of 37signals once described configuration management as\nsomething that [\"doesn't sound sexy, but it's the single most important\nthing we do as sysadmins\"](http://37signals.com/svn/posts/1872-nuts-bolts-configuration-management-with-chef)\nbut what is it and what do tools like\nChef and Puppet offer from the point of view of a developer?\nIn this presentation I want to talk about how configuration management\nallowed me -- a developer with no access to the live servers and\nworking with system administrators in a different time zone -- to not\nonly install and configure servers quickly and in a repeatable way but\nalso let me be confident about the consistency of each and every\nmachine I deploy to.\nUsing the example of getting a server ready to run a Rails application\nusing [Puppet](http://www.puppetlabs.com/) (and testing things out with the aid of [Vagrant](http://vagrantup.com/)), I will\nshowcase some patterns that we have developed for managing versions of\nRuby with RVM, the installation of Phusion Passenger and how to deploy\na database.yml when you're not allowed to see live passwords.",
      "year": "2011",
      "month": "august"
    }
  ],
  "Łukasz Korecki": [
    {
      "title": "pkgr - Packaging Ruby applications with no sweat",
      "author": "Łukasz Korecki",
      "author_link": "http://lukasz.korecki.me",
      "coverage": null,
      "summary": "In the life of every<sup>[*](#pkgr-ps)</sup> project there is\nthis moment where standard deployment methods just don’t cut\nit. You have many servers, many applications, many developers.\nIt can become a mess very, very quickly.\nHave you ever dreamed of hosting your own apt repository? When\nwas the last time you were annoyed about slow deployment times\nbecause the asset pipeline needs to run every single server\nyour app runs on? Oh and lets not mention installing ruby\nversion managers on servers, ok? (I will though).\nIn this talk I will show how packaging (and deploying) Ruby\napplications doesn’t have to be hard or time consuming and can\nwork with a project of any size.\n<a name=\"pkgr-ps\">*</a> - huge assumption warning!”",
      "year": "2015",
      "month": "march"
    }
  ],
  "Garry Shutler": [
    {
      "title": "Redis is the answer, what's the question?",
      "author": "Garry Shutler",
      "author_link": "http://gshutler.com",
      "coverage": "{::coverage year=\"2015\" month=\"june\" talk=\"redis-is-the-answer-what-s-the-question\" /}",
      "summary": "There are very few things that are part of my go-to toolbox, but Redis\nis one of those things. I don't think there's a better, more flexible\npiece of infrastructure you can have at your disposal.\nI'll cover the very basics of using Redis and general patterns that you\ncan use within your own systems. I'll also share some concrete examples\nof what we've used it for at Cronofy.",
      "year": "2015",
      "month": "june"
    }
  ],
  "As a child, Andrew McDonough": [
    {
      "title": "Ruby Magic",
      "author": "As a child, Andrew McDonough",
      "author_link": "As a child, http://twitter.com/andrewmcdonough",
      "coverage": "{::coverage year=\"2015\" month=\"june\" talk=\"ruby-magic\" /}",
      "summary": "",
      "year": "2015",
      "month": "june"
    }
  ],
  "Karlotcha Hoa": [
    {
      "title": "Flaky tests & Capybara best practices",
      "author": "Karlotcha Hoa",
      "author_link": "https://github.com/Karlotcha",
      "coverage": null,
      "summary": "One of the main purposes of testing is to enable us to trust the\nperformance of our code in an automated way. Unfortunately, several\nproblems often arise with automated tests. One common and particularly\nannoying problem that we began experiencing in our codebase was\nflakiness.\nIn this talk, I will discuss common problems that may cause this issue,\nand some solutions we discovered based on our own experience at\nSimplyBusiness.",
      "year": "2015",
      "month": "july"
    }
  ],
  "Robbie Clutton": [
    {
      "title": "Who’s afraid of database views?",
      "author": "Robbie Clutton",
      "author_link": "https://twitter.com/robb1e",
      "coverage": "{::coverage year=\"2015\" month=\"january\" talk=\"who-s-afraid-of-database-views\" /}",
      "summary": "Many Rails codebases I look at work hard to put all logic into\nthe application source code, using the database only a dumb\nstore. But, there are circumstances where it makes sense to\nleverage features of a database and in this talk I'll cover one\nof those features in Views. I'll walk through examples of why you\nmight want logic in two places, how views compare to caching\nfor performance considerations, using views as a facade on\nlegacy tables and how to test views alongside your application.",
      "year": "2015",
      "month": "january"
    }
  ],
  "Tom Stuart": [
    {
      "title": "Hello, declarative world",
      "author": "Tom Stuart",
      "author_link": "http://codon.com",
      "coverage": "{::coverage year=\"2015\" month=\"august\" talk=\"hello-declarative-world\" /}",
      "summary": "Ruby’s billed as a “multi-paradigm” language, but, let’s face it, we\nuse it to write imperative object-oriented programs. I'm interested in\ndifferent ways of programming computers, because I reckon imperative\nprograms are far too low-level and overspecified, which is why as a\nspecies we're generally terrible at writing them. In this talk I want\nto encourage you to think outside of your normal programming habits;\nI’ll present a more abstract and declarative style called relational\nprogramming, and show you how to implement a minimal relational\nlanguage in Ruby. (Dog whistle: this is [μkanren](http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf).)",
      "year": "2015",
      "month": "august"
    },
    {
      "title": "Welcome back to RSpec",
      "author": "Tom Stuart",
      "author_link": "http://codon.com/",
      "coverage": "{::coverage year=\"2014\" month=\"july\" talk=\"welcome-back-to-rspec\" /}",
      "summary": "[RSpec 3](https://relishapp.com/rspec/) has just been released, and it's come a long way since\n[version 1](http://rspec.info). If you've had problems with RSpec in the past, now\nis a great time to revisit it — it's become much cleaner, simpler\nand more focused. I'll give a quick overview of the main things\nthat have changed over the years, and if there's time, I'll\nexplain a few of the new features in version 3.",
      "year": "2014",
      "month": "july"
    },
    {
      "title": "Dependency Injection, the Dependency Inversion Principle, and You",
      "author": "Tom Stuart",
      "author_link": "http://tomstuart.co.uk/",
      "coverage": "{::coverage year=\"2012\" month=\"may\" talk=\"dependency-injection-the-dependency-inversion-principle-and-you\" /}",
      "summary": "It's received wisdom that Ruby doesn't need dependency injection\nframeworks. In this talk, I'll claim that this is at least in\npart because we don't apply the [Dependency Inversion Principle](http://www.objectmentor.com/resources/articles/dip.pdf)\nproperly. I'll explore the intent of the principle, its benefits\nfor maintainable and testable code, and show how to improve\nexisting code through its application.\nI'll then go on to explore how to create objects with dependencies\nwired in, hoping to settle the question of whether we need a framework to do this.",
      "year": "2012",
      "month": "may"
    },
    {
      "title": "Do Mix Your Drinks",
      "author": "Tom Stuart",
      "author_link": "http://experthuman.com/",
      "coverage": "{::coverage year=\"2009\" month=\"july\" talk=\"do-mix-your-drinks\" /}",
      "summary": "",
      "year": "2009",
      "month": "july"
    }
  ],
  "Emily Stolfo": [
    {
      "title": "The shiny new mongo gem",
      "author": "Emily Stolfo",
      "author_link": "https://twitter.com/emstolfo",
      "coverage": "{::coverage year=\"2015\" month=\"april\" talk=\"the-new-mongodb-ruby-driver-2-0\" /}",
      "summary": "The Ruby team at MongoDB spent the last year building a new driver\n-- [the mongo gem](https://github.com/mongodb/mongo-ruby-driver) --\nthat was released a few weeks ago. Emily is going to talk about how\nthey built the driver, its design, and why its availability is\nso exciting for the Rails and Ruby community.\nFor reference, an article announcing the release: [shar.es/1g0PFK](http://shar.es/1g0PFK)\n[MongoDB 3.0](http://docs.mongodb.org/manual/release-notes/3.0/) was also released a few weeks ago and she'll talk a bit\nabout what makes this version so monumental and why you should try\nit out.",
      "year": "2015",
      "month": "april"
    }
  ],
  "Mazz Mosley": [
    {
      "title": "How not to become a terrible human being once you get a leadership title.",
      "author": "Mazz Mosley",
      "author_link": "http://houseofmnowster.com/",
      "coverage": "{::coverage year=\"2014\" month=\"september\" talk=\"how-not-to-become-a-terrible-human-being-once-you-get-a-leadership-title\" /}",
      "summary": "You'll never guess what happens next? Mazz will talk about some\nof the essential skills that good technical leaders exhibit and\nthe information you need to know about to help you become good\nat leading and not turn into a terrible person. Do you find\nyourself in a position of leadership and don't know what to do\nnow? Do you think you're a great tech lead? Do you wonder if\nyou're cut out to lead one day? Great, then come and listen to\nmy talk, you may find it more relevant to your interests than\nyou realise.",
      "year": "2014",
      "month": "september"
    }
  ],
  "Daniel Sun": [
    {
      "title": "Learn to code in 12 weeks?",
      "author": "Daniel Sun",
      "author_link": "http://danielsun.co.uk/",
      "coverage": "{::coverage year=\"2014\" month=\"september\" talk=\"learn-to-code-in-12-weeks\" /}",
      "summary": "Having recently completed the training phase of WeGotCoders I\nwill present some code from [my final project](https://github.com/dan-mi-sun/the-soul-at-work) of the 12 week\ntraining course / some code recently pulled into [Diaspora*](https://www.joindiaspora.com/).\nWith more and more of us choosing this route, the aim is to\nshow those interested in the 'Immersion' model (either\nattending a course, or hiring someone who has joined a course)\nwhat someone with no prior coding experience can achieve\nwithin 12 weeks.",
      "year": "2014",
      "month": "september"
    }
  ],
  "Rob Miller": [
    {
      "title": "Be a good UNIX citizen",
      "author": "Rob Miller",
      "author_link": "https://robm.me.uk/",
      "coverage": "{::coverage year=\"2014\" month=\"october\" talk=\"be-a-good-unix-citizen\" /}",
      "summary": "The Unix command line has been the foundation of how\nwe use computers for over four decades, and has\nchanged surprisingly little in that time. I'll look at\nwhat it takes to elevate a throwaway one-liner or\npersonal script into a robust and re-usable CLI app,\nand look at the Ruby techniques that make it easy to\nbe a good Unix citizen.",
      "year": "2014",
      "month": "october"
    }
  ],
  "Sam Aaron": [
    {
      "title": "Live Coding in the Classroom",
      "author": "Sam Aaron",
      "author_link": "http://sam.aaron.name/",
      "coverage": "{::coverage year=\"2014\" month=\"october\" talk=\"live-coding-in-the-classroom\" /}",
      "summary": "[Sonic Pi](http://sonic-pi.net/) is a Ruby-based live coding music\nsynthesiser designed to help teach both computing\nand music within schools. It uses fast feedback,\nliveness and studio-quality sound production as a\nmeans to engage school children in introductory\ncoding. In this talk we will follow the story of\nSonic Pi from its the humble beginnings of this\nproject in a single class of school-children coding\nbeeps and bleeps to its current standing as a\nstate-of-the-art live coding system installed by\ndefault on all Raspberry Pis  used to live code\nin a variety of venues from Algoraves to national\nmusic venues.  All towards a simple but deep\nquestion - how can we give more people an understanding\nof what programming is and can do?",
      "year": "2014",
      "month": "october"
    }
  ],
  "Avik Sengupta": [
    {
      "title": "Julia  - Fast and Dynamic",
      "author": "Avik Sengupta",
      "author_link": "http://www.sengupta.net/musings/",
      "coverage": null,
      "summary": "Can  a programming language be fast yet highly \ndynamic? The creators of Julia, a new language with \na numeric focus intends to answer yes. \nIn this talk we will introduce the language, and \ndiscuss some of its design and implementation \ndecisions that make it particularly amenable to\ngenerating efficient machine code. We will also talk\nabout Julia's impressive language interop features, \nand see examples of calling Ruby code from within Julia.",
      "year": "2014",
      "month": "november"
    }
  ],
  "Thomas Buckley-Houston": [
    {
      "title": "Peas - A Docker and Ruby based PaaS",
      "author": "Thomas Buckley-Houston",
      "author_link": "http://tombh.co.uk",
      "coverage": null,
      "summary": "I'll be looking at the basic technical concepts\nof the Platform As A Service paradigm (eg; Heroku)\nand what Docker and Ruby can contribute to it.\nSome of the highlights will be; using Docker \ninside Docker, how to test this complex stack \nand concurrency using the Celluloid gem.",
      "year": "2014",
      "month": "november"
    }
  ],
  "Angela Ebirim": [
    {
      "title": "Learning to Code",
      "author": "Angela Ebirim",
      "author_link": "https://twitter.com/obia67",
      "coverage": "{::coverage year=\"2014\" month=\"may\" talk=\"learning-to-code\" /}",
      "summary": "It'll be about my adventures, frustrations and triumphs in learning to code and specifically in Ruby.",
      "year": "2014",
      "month": "may"
    }
  ],
  "Adam Rogers": [
    {
      "title": "How to win developers and influence designers",
      "author": "Adam Rogers",
      "author_link": "https://twitter.com/rodreegez",
      "coverage": "{::coverage year=\"2014\" month=\"may\" talk=\"how-to-win-developers-and-influence-designers\" /}",
      "summary": "In 1936, Dale Carnegie wrote the book [\"How to win friends and influence people\"](http://www.amazon.co.uk/How-Win-Friends-Influence-People/dp/0091906814/).\nYou may have heard of it. But what can this book, and others, teach us about\nworking as part of a software team today? Quite a lot, actually.\nWe'll look at a few points that'll help us to work better, together.",
      "year": "2014",
      "month": "may"
    }
  ],
  "Gabe da Silveira": [
    {
      "title": "Deprecating ActiveResource: Alternative Approaches for Internal Rails Services",
      "author": "Gabe da Silveira",
      "author_link": "https://twitter.com/dasil003",
      "coverage": "{::coverage year=\"2014\" month=\"may\" talk=\"deprecating-activeresource-alternative-approaches-for-internal-rails-services\" /}",
      "summary": "Ruby on Rails has always been optimized for a single monolithic application\narchitecture.  But as applications grow, it has become more and more common\nfor architects to seek out ways to break their monolithic Rails apps into\nself-contained services.  For years the most natural answer of how to hook\nup one Rails app to another's API has been to use ActiveResource, a core\nRails plugin that provides an ActiveRecord-like interface to an external service.\nThe allure of such a simple interface to a network service is undeniable, but\nthe downsides not nearly as obvious.  Many have built Rails apps relying on\nActiveResource only to feel significant unforeseen pain down the line.  This\ntalk provides a case study of an early adopter of ActiveResource during the\nRails 1.2 era, the pain that it led to, and the eventual replacement of\nActiveResource with a bespoke private gem that provides a similar, but more\nrobust interface.",
      "year": "2014",
      "month": "may"
    }
  ],
  "Andrew Appleton": [
    {
      "title": "Rage against the state machine",
      "author": "Andrew Appleton",
      "author_link": "https://twitter.com/appltn",
      "coverage": "{::coverage year=\"2014\" month=\"march\" talk=\"rage-against-the-state-machine\" /}",
      "summary": "A story about the problems we faced modelling state and\nrecording state changes at [GoCardless](https://gocardless.com/blog/) and how we\ngeneralised our solution to those problems into a new\ngem, [Statesman](https://github.com/gocardless/statesman).",
      "year": "2014",
      "month": "march"
    }
  ],
  "Derek Hill": [
    {
      "title": "Marketing for Developers",
      "author": "Derek Hill",
      "author_link": "http://uk.linkedin.com/in/derekahill/",
      "coverage": "{::coverage year=\"2014\" month=\"march\" talk=\"marketing-for-developers\" /}",
      "summary": "I’m a relative newcomer to Ruby, but I’ve got lots of experience in\nmarketing.\nOver the last two years I’ve spoken to many experienced devs about\ntheir marketing challenges, and witnessed how simple marketing\nmistakes can derail a project.\nIn the consumer goods industry marketing is a discipline, with\nstructured ways of working through it.   I will demonstrate that\nthis structure works well for tech startups, and give you a\npractical checklist you can apply.",
      "year": "2014",
      "month": "march"
    }
  ],
  "Mal Pinder": [
    {
      "title": "Patterns & Antipatterns in Teaching",
      "author": "Mal Pinder",
      "author_link": "https://twitter.com/malpinder",
      "coverage": "{::coverage year=\"2014\" month=\"june\" talk=\"patterns-antipatterns-in-teaching\" /}",
      "summary": "My talk will be about the techniques & approaches that\nworked (and didn't work) for us while I was teaching at\n[Codecraft](http://tech.fundingcircle.com/codecraft/).",
      "year": "2014",
      "month": "june"
    }
  ],
  "John Maxwell": [
    {
      "title": "Continuous Deliverance - set your development free",
      "author": "John Maxwell",
      "author_link": "http://jgwmaxwell.com/",
      "coverage": "{::coverage year=\"2014\" month=\"july\" talk=\"continuous-deliverance-set-your-development-free\" /}",
      "summary": "The first principle of the Agile Manifesto says “Our highest\npriority is to satisfy the customer through early and\ncontinuous delivery of valuable software”, yet too often this\nis not the reality. Delivery is one of the most disruptive\nparts of the software development process for developers, but\ncan be easy to automate, empowering the iterative process.\nThis talk is a manifesto for how to go from scratch to\nautomated deployment, with a few tales from the trenches of\nmistakes made along the way.",
      "year": "2014",
      "month": "july"
    }
  ],
  "Javier Ramirez": [
    {
      "title": "API Analytics with Redis and Bigquery",
      "author": "Javier Ramirez",
      "author_link": "http://javier-ramirez.com/",
      "coverage": "{::coverage year=\"2014\" month=\"january\" talk=\"api-analytics-with-redis-and-bigquery\" /}",
      "summary": "At [teowaki](https://teowaki.com/) we have a system for API usage analytics,\nwith [Redis](http://redis.io/) as a fast intermediate store and\n[bigquery](https://developers.google.com/bigquery/) as a big data\nbackend. As a result, we can launch aggregated queries on our\ntraffic/usage data in just a few seconds and we can try and find\nfor usage patterns that wouldn’t be obvious otherwise.\nIn this session I will talk about how we entered the Big Data\nworld, which alternatives we evaluated, and how we are using\nRedis and Bigquery to solve our problem.",
      "year": "2014",
      "month": "january"
    },
    {
      "title": "Javier Ramirez: Usable APIs",
      "author": "Javier Ramirez",
      "author_link": "http://twitter.com/supercoco9",
      "coverage": null,
      "summary": "With the adoption of REST, the proliferation of smartphones and tablets, and the second coming \nof JavaScript, exposing our applications as a service is now more important than ever.\nRails or Sinatra make really easy to create a (kinda) RESTful API but, in many occassions, \nthese APIs are designed without really thinking on the developers that will have to use them.\nI want to talk about some of the points that can help making your API more developer-friendly. \nSome of the areas I'll cover will be discoverability, authentication, headers, formats, parameters, \ndocumentation and tools.",
      "year": "2011",
      "month": "december"
    }
  ],
  "Julien Letessier": [
    {
      "title": "Using data tiering to squeeze scale out of SQL",
      "author": "Julien Letessier",
      "author_link": "http://dec0de.me/",
      "coverage": "{::coverage year=\"2014\" month=\"january\" talk=\"using-data-tiering-to-squeeze-scale-out-of-sql\" /}",
      "summary": "As traffic grows, some of the data structures our application\nhas to manipulate gets contended. Ours is an unusual, but\neffective solution: segregate data into read-mostly and\nwrite-mostly.",
      "year": "2014",
      "month": "january"
    }
  ],
  "Owen Ben Davies": [
    {
      "title": "Are you sure it's right?",
      "author": "Owen Ben Davies",
      "author_link": "http://www.obduk.com/",
      "coverage": null,
      "summary": "This talk on both Rails and plain Ruby apps will cover\n* Testing\n* Code standards tools\n* Validations and verifications\n* Security tools and frameworks",
      "year": "2014",
      "month": "december"
    }
  ],
  "Sam Phippen": [
    {
      "title": "An RSpec 3 Talk",
      "author": "Sam Phippen",
      "author_link": "http://samphippen.com/",
      "coverage": null,
      "summary": "RSpec 3 is the recently released new major version of \nRSpec. It contains a host of new features, and has \nremoved or altered many old ones. In this talk we’ll \ncover the most significant changes that were made in \nRSpec 3, the upgrade path between RSpec 2 and 3 and \nsome of the common pitfalls that you might fall into\nwhen using this new major version of RSpec.",
      "year": "2014",
      "month": "december"
    }
  ],
  "Dirk Breuer": [
    {
      "title": "How to make Guacamole",
      "author": "Dirk Breuer",
      "author_link": "http://tfcl.de/",
      "coverage": "{::coverage year=\"2014\" month=\"august\" talk=\"how-to-make-guacamole\" /}",
      "summary": "[ArangoDB](https://www.arangodb.org/) is a multi-purpose NoSQL database. There are a lot\nof features in it but without a proper high level library\nfor common web frameworks no one will use a database these\ndays. No matter how fancy it is. [Guacamole](http://guacamolegem.org/) is an ODM for\nArangoDB to be used in Rack-based framework and especially\nRails. I will talk about the design choices, caveats and my\nthe general experience working on that kind of library. The\ntalk will not go too deep into technical details and should\nbe interesting to novice and experts alike.",
      "year": "2014",
      "month": "august"
    }
  ],
  "Alex Speller": [
    {
      "title": "A gentle introduction to music theory (in ruby)",
      "author": "Alex Speller",
      "author_link": "http://alexspeller.com/",
      "coverage": "{::coverage year=\"2014\" month=\"august\" talk=\"a-gentle-introduction-to-music-theory-in-ruby\" /}",
      "summary": "Music theory can seem arcane and unapproachable. But underneath\nthe weird names and symbols, the basics are actually pretty\nsimple. The real issue is that the documentation is bad and the\nAPI is worse! In this talk I will show how to start with nothing\nbut a ruby interpreter, and generate sine waves, notes, scales,\nmodes, chords, arpeggios and songs, in a way that will be\nunderstandable to those who have never touched an instrument\nbefore and will (hopefully) offer an interesting new perspective\neven to those who are already well versed in music theory.",
      "year": "2014",
      "month": "august"
    }
  ],
  "Some of the team from the ODI": [
    {
      "title": "Adventures in early-adoption of open-source code",
      "author": "Some of the team from the ODI",
      "author_link": "Some of the team from http://theodi.org/",
      "coverage": "{::coverage year=\"2014\" month=\"april\" talk=\"adventures-in-early-adoption-of-open-source-code\" /}",
      "summary": "Last year, the ODI found themselves wanting to use the\ncode behind [gov.uk](http://www.gov.uk) for a new project.\nIn this talk [James](https://theodi.org/team/james-smith)\nand [Sam](https://theodi.org/team/sam-pikesley) from the ODI\ntech team will share their experience of picking up a codebase\nwhich was [open source](https://github.com/alphagov), but never\nreally designed for reuse, and what they learned along the way.",
      "year": "2014",
      "month": "april"
    }
  ],
  "Camille Baldock": [
    {
      "title": "Aspect-Oriented Programming in Ruby",
      "author": "Camille Baldock",
      "author_link": "http://camillebaldock.co.uk/",
      "coverage": "{::coverage year=\"2014\" month=\"april\" talk=\"aspect-oriented-programming-in-ruby\" /}",
      "summary": "Many of us developers love arguing about architecture that\nwe dislike and refactoring our code to loosen coupling and\nweaken dependencies between our objects. Unfortunately,\nsome overarching parts of our applications, like persistence,\nnetworking, notifications, logging, auditing, are scattered\nin our code, forcing us to specific explicit dependencies\nbetween them and our domain objects.\n[Aspect-oriented programming](http://en.wikipedia.org/wiki/Aspect-oriented_programming)\nis a solution to the problem of some features affecting\nvirtually all business requirements, and expresses that problem\nin a compact and DRY way.\nIn this practical talk, Camille will:\n* introduce the basic concepts of AOP, and how it is still relevant even in a non-statically typed language like Ruby\n* show you how to easily and quickly leverage some AOP principles in your Rails application\n* play with some AOP-friendly constructs in Ruby 2, in particular TracePoint\n* walk you through two existing Ruby frameworks to practice Aspect-Oriented Programming\nShe will even attempt to prove that not all things coming from the Java world are necessarily bad.",
      "year": "2014",
      "month": "april"
    }
  ],
  "Luismi Cavallé": [
    {
      "title": "Concerned about Concerns?",
      "author": "Luismi Cavallé",
      "author_link": "https://twitter.com/cavalle",
      "coverage": null,
      "summary": "With Rails 4, Concerns have become [the “official” solution](http://37signals.com/svn/posts/3372-put-chubby-models-on-a-diet-with-concerns)\nto the big-models problem. However, there's a fair amount\nof controversy about this topic in the community. Not \neveryone is convinced that Concerns are the “right“ solution\nto the problem of AR models becoming too big.\n\nIn this talk we will see what Rails Concerns are and how can \nwe use them to keep our models fit. More interestingly, we'll\ndiscuss the trade-offs of this technique, the different views\nin the community and a couple of alternatives.",
      "year": "2013",
      "month": "september"
    }
  ],
  "Drew Neil": [
    {
      "title": "Modelling state machines with Ragel",
      "author": "Drew Neil",
      "author_link": "http://drewneil.com/",
      "coverage": "{::coverage year=\"2013\" month=\"october\" talk=\"modelling-state-machines-with-ragel\" /}",
      "summary": "Ragel is a State Machine Compiler, which can generate Ruby\ncode (as well as C, Java, Go, and more). It can be used for\nwriting robust protocol implementations, parsing data formats,\nand performing lexical analysis of programming languages. Ragel\nis used in many open source projects including [Gherkin](https://github.com/cucumber/gherkin/blob/master/ragel/lexer_common.rl.erb),\n[Thin](https://github.com/macournoyer/thin/blob/master/ext/thin_parser/parser.rl), [Min](https://github.com/macournoyer/min/blob/master/src/min/lang/Scanner.rl),\n[Mongrel](https://github.com/mongrel/mongrel/blob/master/ext/http11/http11_parser_common.rl), [Redcloth](https://github.com/jgarber/redcloth/tree/master/ragel),\n[Radiant](https://github.com/jlong/radius/blob/master/lib/radius/parser/JavaScanner.rl), and [Hpricot](https://github.com/hpricot/hpricot/blob/master/ext/hpricot_scan/hpricot_common.rl).\nTo demonstrate Ragel's capabilities we'll model [Vim](http://www.vim.org/), which is a\nFinite State Machine. We'll do so by parsing a stream of Vim\nkeystrokes, using Ragel state machines to manage the transitions\nbetween Vim's modes. We'll see how to generate state chart\nvisualisations with Ragel, and how these can be used to debug\nour state machines. The resulting program will enable us to\nanalyse and visualise the interactions of a Vim user.",
      "year": "2013",
      "month": "october"
    }
  ],
  "Olly Legg": [
    {
      "title": "Enumerators in Ruby",
      "author": "Olly Legg",
      "author_link": "http://www.51degrees.net/",
      "coverage": "{::coverage year=\"2013\" month=\"october\" talk=\"enumerators-in-ruby\" /}",
      "summary": "[Enumerators](http://ruby-doc.org/core-2.0.0/Enumerator.html)\nare a little known class in the standard library.\nI'll discuss where they're used in stdlib, how you can\nimplement them and (at least) one practical example where\nthey might be the right solution.",
      "year": "2013",
      "month": "october"
    }
  ],
  "<img src=\"https://assets.lrug.org/images/skills_matter_medium.png\" width=\"240\" height=\"90\" alt=\"Skills Matter?\" title=\"Skills Matter\"/>": [
    {
      "title": "Pizza!",
      "author": "<img src=\"https://assets.lrug.org/images/skills_matter_medium.png\" width=\"240\" height=\"90\" alt=\"Skills Matter?\" title=\"Skills Matter\"/>",
      "author_link": "http://www.skillsmatter.com/",
      "coverage": null,
      "summary": "",
      "year": "2013",
      "month": "october"
    }
  ],
  "Andrew Nesbitt": [
    {
      "title": "Controlling Robots with Ruby",
      "author": "Andrew Nesbitt",
      "author_link": "http://nesbitt.io/",
      "coverage": "{::coverage year=\"2013\" month=\"november\" talk=\"controlling-robots-with-ruby\" /}",
      "summary": "In the past few years robots have started to invade our lives, as\ntoys or tools for around the home or at work. These robots are\noften much more user friendly and more importantly, hackable, than\ntraditional industrial robots, which has lowered the barrier to\nwriting software to control robots.\nWe'll look at one particular ruby library, [Artoo](http://artoo.io/), a micro-framework\nfor robotics that lets you connect to multiple different hardware\ndevices and robots at the same time with some live demos as well.",
      "year": "2013",
      "month": "november"
    },
    {
      "title": "An introduction to Rubymotion: Writing iOS apps with Ruby",
      "author": "Andrew Nesbitt",
      "author_link": "http://teabass.com/",
      "coverage": "{::coverage year=\"2012\" month=\"november\" talk=\"an-introduction-to-rubymotion-writing-ios-apps-with-ruby\" /}",
      "summary": "[Rubymotion](http://www.rubymotion.com/) lets you write native iOS apps in Ruby, this talk\nexplores the toolkit and the community that has sprung up around it.",
      "year": "2012",
      "month": "november"
    }
  ],
  "Dawid Skłodowski": [
    {
      "title": "DCI with Ruby & Rails",
      "author": "Dawid Skłodowski",
      "author_link": "http://dawid.sklodowski.eu/",
      "coverage": "{::coverage year=\"2013\" month=\"may\" talk=\"dci-with-ruby-rails\" /}",
      "summary": "Data Context Interaction is recently invented programming paradigm,\nwhich aims at separating behaviour from data model, by extracting\ninteractions into roles, which can be played by objects in various\ncontexts.\nThis presentation is going to give brief introduction to DCI,\npropose ways to implement roles' injection in Ruby and discuss\nhow DCI could be used to supplement Rails' MVC paradigm.",
      "year": "2013",
      "month": "may"
    }
  ],
  "Randy Morgan": [
    {
      "title": "Come get dirty with mruby",
      "author": "Randy Morgan",
      "author_link": "https://github.com/randym",
      "coverage": "{::coverage year=\"2013\" month=\"may\" talk=\"come-get-dirty-with-mruby\" /}",
      "summary": "While most of us know what mruby is, few of us have had a\nchance to kick the tires, poke around a bit and see what\nmakes it tick. In this ~30 minute workshop-presentation,\nwe will help each other to get mruby built locally, do a\nclassic \"Chunky bacon\" test, and have a go at writing our\nown rbgems to extend the language with custom functionality.\nBring your laptop, and get your hands dirty with mruby.",
      "year": "2013",
      "month": "may"
    }
  ],
  "JB Steadman": [
    {
      "title": "State Transitions Are People Too",
      "author": "JB Steadman",
      "author_link": "https://twitter.com/jbsteadman",
      "coverage": "{::coverage year=\"2013\" month=\"june\" talk=\"state-machines-are-people-too\" /}",
      "summary": "In this talk I present a simple ActiveRecord-based alternative\nto the many popular state machine gems.\nSuppose you're dealing with a school application system.\nApplications can be submitted, rejected, approved. Then\nyou would have\n``class Submission < StateTransition end``\nand so on. StateTransition is an STI subclass of\nActiveRecord::Base.\nInside each 'concrete' transition subclass, AR\nvalidations determine whether the transition can be\ncreated, given current system state. Callbacks make\nchanges to other models that result from the\ntransitions, as well as trigger other effects like emails.\nThis shifts emphasis from the models to the transitions\nthemselves. Model classes don't get cluttered with\nlogic related to multiple transitions - that logic\nlives in the transition classes. It works nicely\nwith REST. You are literally creating an Approval,\nrather than \"approving\". Logging of transitions is\nfront and center. Nobody has to learn a new lib and\nyou're never beholden to yesteryear's state machine\ngem-of-the-month.",
      "year": "2013",
      "month": "june"
    }
  ],
  "Louis Goff-Beardsley": [
    {
      "title": "Building and maintaining a Ruby team during the Rails crisis of 2013",
      "author": "Louis Goff-Beardsley",
      "author_link": "https://twitter.com/LouisRoR",
      "coverage": "{::coverage year=\"2013\" month=\"july\" talk=\"building-and-maintaining-a-ruby-team-during-the-rails-crisis-of-2013\" /}",
      "summary": "1. There’s a massive shortage of Ruby developers.\n2. Over the last year I’ve worked with numerous teams\n   implementing creative, non-standard ways to building and\n   maintaining teams.\n3. I’m going to talk about them.\n4. This will be relevant to existing teams and people\n   thinking of starting a team in the future. Overall I think\n   it will be beneficial & interesting for everyone, even if\n   you’re not thinking of starting your own team any time soon.",
      "year": "2013",
      "month": "july"
    }
  ],
  "To ease us into 2013, Murray Steele": [
    {
      "title": "Pub quiz!",
      "author": "To ease us into 2013, Murray Steele",
      "author_link": "To ease us into 2013, http://h-lame.com/",
      "coverage": null,
      "summary": "",
      "year": "2013",
      "month": "january"
    }
  ],
  "Tymon Tobolski": [
    {
      "title": "The solution to assets management in Rails",
      "author": "Tymon Tobolski",
      "author_link": "http://teamon.eu/",
      "coverage": "{::coverage year=\"2013\" month=\"december\" talk=\"the-solution-to-assets-management-in-rails\" /}",
      "summary": "As Ruby web developers we all know the pain of managing client\nside assets in (not only) Rails applications, especially in legacy\napplications. I have had enough and that's how [http://rails-assets.org](http://rails-assets.org)\nwas born. The main purpose of this talk, besides spreading the\nword, is to show some details of how rails-assets works and to\ncompare it with existing solutions",
      "year": "2013",
      "month": "december"
    }
  ],
  "Rosario Rascuna": [
    {
      "title": "A FizzBuzz to rule them all",
      "author": "Rosario Rascuna",
      "author_link": "http://rosario.io/",
      "coverage": "{::coverage year=\"2013\" month=\"december\" talk=\"a-fizzbuzz-to-rule-them-all\" /}",
      "summary": "Do expressive programming languages influence how we approach a\nproblem? We'll look at a few things you can learn about software\ndevelopers after analysing 1500 FizzBuzz implementations.",
      "year": "2013",
      "month": "december"
    }
  ],
  "Stephen Best": [
    {
      "title": "Improve your code with dependency injection",
      "author": "Stephen Best",
      "author_link": "https://twitter.com/thebestie",
      "coverage": null,
      "summary": "Most of us have heard the vague, hand waving spiel about why\nDI is important for writing flexible, reusable code, a\nlittle harder to come by are examples of how one actually\ngoes about doing it in a (cost) effective manner.\nRather than a dry introduction to DI, this talk will be\npacked full of code examples demonstrating practical\ntechniques you can start using straight away, no gems,\nmeta-programming or magic required. We'll also explore how\nyou might persuade your Rails app to benefit from DI.",
      "year": "2013",
      "month": "august"
    }
  ],
  "Pete Hamilton": [
    {
      "title": "Rabbit running wild? You need a hutch!",
      "author": "Pete Hamilton",
      "author_link": "https://twitter.com/peterejhamilton",
      "coverage": "{::coverage year=\"2013\" month=\"august\" talk=\"rabbit-running-wild-you-need-a-hutch\" /}",
      "summary": "When you're working in an architecture with multiple\nservices, there are a lot of available options for how to\ncommunicate between them. Which do you pick?\nI'll be talking about why [RabbitMQ](http://www.rabbitmq.com/) can be a great choice,\nhow and why we're using it here at [GoCardless](https://gocardless.com/) and covering\nsome of the ways we've simplified using RabbitMQ's\n[Topic Exchange](http://www.rabbitmq.com/tutorials/amqp-concepts.html#exchange-topic) in a ruby environment with 'Hutch'.\nI'll then talk about some of the issues we encountered\naround scaling and setting up multiple rabbit nodes as a\ncluster, highlighting some of the potential failure points\nand edge cases this brings with it and a tools we built to\nmake sure we had them covered.",
      "year": "2013",
      "month": "august"
    }
  ],
  "Ian Kynnersley": [
    {
      "title": "Doing less and keeping it simple",
      "author": "Ian Kynnersley",
      "author_link": "http://iankynnersley.co.uk/",
      "coverage": "{::coverage year=\"2012\" month=\"september\" talk=\"doing-less-and-keeping-it-simple\" /}",
      "summary": "What do we mean when we talk about simplicity? Why is it important and why is\nit so hard to achieve?",
      "year": "2012",
      "month": "september"
    }
  ],
  "Chris O'Sullivan": [
    {
      "title": "Objective C for Rubyists",
      "author": "Chris O'Sullivan",
      "author_link": "http://www.thechrisoshow.com/",
      "coverage": "{::coverage year=\"2012\" month=\"september\" talk=\"objective-c-for-rubyists\" /}",
      "summary": "There are so many things we take for granted writing Ruby code -\ninitialising hashes and arrays, doing basic arithmetic with floats and\nintegers, using subscript accessors for containers.  Trying to do\nthese basic things in Objective C requires writing screeds of\nboilerplate code.\nWell, it's time to have another look at Objective C.\nThe latest version of the compiler includes some wonderful shortcuts\nto make your code more concise, readable, and a lot more like Ruby. In\nthis talk I'll give you a whirlwind tour of these changes.",
      "year": "2012",
      "month": "september"
    }
  ],
  "John Leach": [
    {
      "title": "Beautiful command-line interface design",
      "author": "John Leach",
      "author_link": "http://johnleach.co.uk/",
      "coverage": "{::coverage year=\"2012\" month=\"october\" talk=\"beautiful-command-line-interface-design\" /}",
      "summary": "A lot of importance is placed on good GUI design but it’s easy to\noverlook good command line interfaces.\nTaking from our experiences writing the Brightbox Cloud cli (and years\nof using cli tools, both good and bad), this talk will show you some of\nthings you need to consider when designing a good cli interface (with a\nfocus on Ruby!).\nAnd all this without turning to ncurses!",
      "year": "2012",
      "month": "october"
    },
    {
      "title": "UNIX: Rediscovering the wheel",
      "author": "John Leach",
      "author_link": "http://johnleach.co.uk/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "may"
    },
    {
      "title": "UNIX: Rediscovering the wheel",
      "author": "John Leach",
      "author_link": "http://johnleach.co.uk/",
      "coverage": "{::coverage year=\"2010\" month=\"june\" talk=\"unix-rediscovering-the-wheel\" /}",
      "summary": "\"Those who don't understand UNIX are condemned to reinvent it, poorly.\"\nWe in the Ruby Community seem to have a habit of re-inventing things. Sometimes this is for good reason, but in some cases we don't know we're even doing it! We're wasting valuable time that could be spent learning Erlang!\nUNIX-like operating systems have been around for decades and lots of problems have come and gone in that time. I'm going to talk about some of the tools available that can be used to solve common Ruby and Rails deployment and development problems.",
      "year": "2010",
      "month": "june"
    }
  ],
  "Anuj Dutta": [
    {
      "title": "DTrace + Ruby",
      "author": "Anuj Dutta",
      "author_link": "http://www.andhapp.com/",
      "coverage": "{::coverage year=\"2012\" month=\"october\" talk=\"dtrace-ruby\" /}",
      "summary": "",
      "year": "2012",
      "month": "october"
    }
  ],
  "Khash Sajadi": [
    {
      "title": "Background processing in Ruby (and Rails)",
      "author": "Khash Sajadi",
      "author_link": "http://sajadi.co.uk/dflat/",
      "coverage": "{::coverage year=\"2012\" month=\"november\" talk=\"background-processing-in-ruby-and-rails\" /}",
      "summary": "This is an introduction to scalable background processing in Ruby\n(and Rails) applications. It discusses best practises on task\nmanagement, managing and scaling long running processes in apps\nand overviews different solutions from high end of [Delayed Job](https://github.com/collectiveidea/delayed_job)\nto more detailed ones like [Event Machine](http://rubyeventmachine.com/).",
      "year": "2012",
      "month": "november"
    }
  ],
  "Elise Huard": [
    {
      "title": "Ruby's bin men: a closer look at the garbage collector",
      "author": "Elise Huard",
      "author_link": "http://jabberwocky.eu/",
      "coverage": "{::coverage year=\"2012\" month=\"may\" talk=\"ruby-s-bin-men-a-closer-look-at-the-garbage-collector\" /}",
      "summary": "The Garbage Collector: how does it work?\nWhat does it mean when people speak about stop-the-world,\nmark-and-sweep, generational garbage collectors?\nHow does ruby fare at collecting its own garbage?\nWhat does it mean when they say 1.9.3's garbage collector has improved?\nThis talk will explain those concepts, what the impact of garbage\ncollection is on our programs, and what future could be.",
      "year": "2012",
      "month": "may"
    },
    {
      "title": "Elise Huard: Ruby goes to hollywood",
      "author": "Elise Huard",
      "author_link": "http://jabberwocky.eu/",
      "coverage": "{::coverage year=\"2011\" month=\"april\" talk=\"ruby-goes-to-hollywood\" /}",
      "summary": "A brief overview of the state of concurrency in Ruby, concurrency models\nused in other languages, and why actors might be the way to go.",
      "year": "2011",
      "month": "april"
    }
  ],
  "Stuart Eccles": [
    {
      "title": "TDD Fishbowl",
      "author": "Stuart Eccles",
      "author_link": "http://madebymany.com/people/stuart-eccles",
      "coverage": "{::coverage year=\"2012\" month=\"march\" talk=\"tdd-fishbowl-session\" /}",
      "summary": "",
      "year": "2012",
      "month": "march"
    }
  ],
  "Matt Wynne": [
    {
      "title": "Hexagonal Rails",
      "author": "Matt Wynne",
      "author_link": "mattwynne.net",
      "coverage": "{::coverage year=\"2012\" month=\"june\" talk=\"hexagonal-rails\" /}",
      "summary": "The things that make Rails great in the first few weeks of a new project are\nprecisely what makes it hurt after a few months. Anyone who has worked on a\nmedium-sized Rails app will have experienced pain like:\n* High coupling, meaning you have to run all your tests all the time to check\n  each change.\n* Slow tests.\n* Logic littered in view templates or helper modules.\nChanges get more and more expensive to make, and the fun grinds to a halt.\nHow can you stop this from happening? And more importantly, how can you turn\naround a project that’s already hit this wall of pain?\nYou need to pull your app away from Rails.\nIn this practical talk, we describe [an architecture](http://c2.com/cgi/wiki?PortsAndAdaptersArchitecture) for mature Rails\napplications where the framework becomes a [plug-in](http://confreaks.com/videos/759-rubymidwest2011-keynote-architecture-the-lost-years) to your application.\nWith hands-on demonstrations, you’ll learn how to define clear boundaries\nbetween your application’s domain and Rails’ domain. Now Rails can stick\nto doing what it does best – providing the persistence and HTTP stack –\nand your valuable business logic will be in [plain old](http://blog.steveklabnik.com/posts/2011-09-06-the-secret-to-rails-oo-design) [Ruby objects](http://devblog.avdi.org/2011/11/15/early-access-beta-of-objects-on-rails-now-available-2/) that\nare [fast](http://arrrrcamp.be/videos/2011/corey-haines---fast-rails-tests/) to [test](https://www.destroyallsoftware.com/screencasts/catalog/fast-tests-with-and-without-rails) and easy to reason about.",
      "year": "2012",
      "month": "june"
    }
  ],
  "Sam Phillips": [
    {
      "title": "Happier deployments through gradual feature rollout",
      "author": "Sam Phillips",
      "author_link": "http://samsworldofno.com/",
      "coverage": "{::coverage year=\"2012\" month=\"july\" talk=\"happier-deployments-through-gradual-feature-rollout\" /}",
      "summary": "Releasing a big change to an application, whether a large overhaul of\nthe UX, system migration or upgrade to the internals, can be daunting.\nWill the change work technically? Will it make your users happy and\nimprove the desired metrics? This talk discusses strategies and\ntechnologies you can use to gradually roll changes out to gather early\nfeedback and prove your assumptions. It includes in-depth looks at\nsome technologies available (including the [rollout](https://github.com/jamesgolick/rollout) gem), as well as the\npart that gradual feature rollout has to play within your agile\nprocess.\nThese are all true stories, most of which I've been involved in. I'll\ncover experiences of products and projects of varying sizes, talk\nabout different solutions for different environments and, just to be\nfair, I include the humiliating (character-building) mistakes I've\nmade along the way.",
      "year": "2012",
      "month": "july"
    }
  ],
  "J. Pablo Fernádez": [
    {
      "title": "What Ruby can't do",
      "author": "J. Pablo Fernádez",
      "author_link": "http://pupeno.com/",
      "coverage": "{::coverage year=\"2012\" month=\"july\" talk=\"what-ruby-can-t-do\" /}",
      "summary": "Ruby is an amazing language, it has an beautiful object model, a\nconcise syntax and it allows you to write functional code\nelegantly. It's probably one of the most powerful programming\nlanguages out there, yet, there are still some things it cannot\ndo. Let's explore those aspects because it'll open our minds to\nthink differently but most important, because it's fun!",
      "year": "2012",
      "month": "july"
    }
  ],
  "Chris McGrath": [
    {
      "title": "Chris McGrath: I18n",
      "author": "Chris McGrath",
      "author_link": "https://twitter.com/chrismcg",
      "coverage": "{::coverage year=\"2012\" month=\"january\" talk=\"i18n\" /}",
      "summary": "The talk is about lessons learned localising a rails app into nine\ndifferent languages. It will cover:\n* Why we localised our app\n* Why you might want to use rails i18n even if you're only planning one language\n* A little bit about how the i18n gem works for those unfamiliar with it\n* Common problems you'll have and ways to work around them\nThe app we localised is [http://www.kyero.com](http://www.kyero.com/) and the\ntool we've built to help us and other ruby / rails devs using the i18n gem\nin [http://localeapp.com](http://localeapp.com/).",
      "year": "2012",
      "month": "january"
    }
  ],
  "Joe Corcoran": [
    {
      "title": "Joe Corcoran: Judge",
      "author": "Joe Corcoran",
      "author_link": "http://blog.joecorcoran.co.uk/",
      "coverage": "{::coverage year=\"2012\" month=\"january\" talk=\"judge-client-side-form-validation-for-rails-3\" /}",
      "summary": "I'll talk about building [Judge](https://github.com/joecorcoran/judge), a client side form validation gem for\nRails 3.  I'll explain how I've tried to keep it lightweight and\nunassuming, why I ditched jQuery in favour of plain old JavaScript and\nwhat I learned about Rails i18n, form builders and HTML data\nattributes along the way.  I'll also give a brief introduction to\n[Travis](http://travis-ci.org/), the distributed build system that I've been using for\ncontinuous integration.",
      "year": "2012",
      "month": "january"
    }
  ],
  "Claudio Ortolina": [
    {
      "title": "Hermes, add wings to Ruby and Javascript development",
      "author": "Claudio Ortolina",
      "author_link": "http://claudio-ortolina.org/",
      "coverage": "{::coverage year=\"2012\" month=\"december\" talk=\"my-tests-run-faster-than-your-tests\" /}",
      "summary": "[Hermes](https://github.com/New-Bamboo/Hermes): A Vim/Tmux development environment to\neasily work with Ruby and Javascript.",
      "year": "2012",
      "month": "december"
    }
  ],
  "Pat Allan": [
    {
      "title": "Cut and Polish: Crafting Gems",
      "author": "Pat Allan",
      "author_link": "http://freelancing-gods.com/",
      "coverage": "{::coverage year=\"2012\" month=\"august\" talk=\"cut-and-polish-crafting-gems\" /}",
      "summary": "Gems underpin almost every piece of Ruby code we write – and so, being\nable to write your own gems is not only incredibly useful, it provides\nan avenue for code reuse and open source sharing. I'll be talking about\nthe ecosystem around gems and the fundamentals for writing your own gem\nfrom the ground up, plus some of the tools available to assist with\nthis, along with ideal approaches and best practices for gem\ndevelopment.",
      "year": "2012",
      "month": "august"
    },
    {
      "title": "Sphinx",
      "author": "Pat Allan",
      "author_link": "http://freelancing-gods.com/",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "august"
    }
  ],
  "David Nolan": [
    {
      "title": "nil points: a talk about nothing, NULL, undefined, Maybe, and other ghosts in Ruby and beyond",
      "author": "David Nolan",
      "author_link": "http://kapoq.com/",
      "coverage": "{::coverage year=\"2012\" month=\"august\" talk=\"nil-points-a-talk-about-nothing-null-undefined-maybe-and-other-ghosts-in-ruby-and-beyond\" /}",
      "summary": "nil in Ruby is neat, simple, and convenient. But it's also problematic.\nIt infiltrates our code, silently, until boom! 'undefined method foo\nfor nil:NilClass' (or - true story, there's no time to explain -\nsuddenly thousands of Mark Zuckerbergs).\nIn this talk, I take a deep dive into nil, NULL, undefined, Maybe and\nother ghosts in Ruby and beyond. I want uncover important concepts that\nI think are obscured by by nil's convenience. And I think nil can be so\ncorrosive it's worth asking why we need it at all. Can we eliminate it\ncompletely? Can it be improved?\nSure, there are decent Ruby patterns and practices for living with nil,\nand I'll take a look at them. But I'll also try to illuminate nil by\nway of a vintage Soviet computer, Jainism, a billion dollars, a\nPeruvian tribe, and a Victorian wooden adding machine. And, since this\nis Ruby, there will some reckless live monkey-patching.",
      "year": "2012",
      "month": "august"
    }
  ],
  "Makoto Inoue": [
    {
      "title": "Demystifying dRuby",
      "author": "Makoto Inoue",
      "author_link": "https://twitter.com/makoto_inoue",
      "coverage": "{::coverage year=\"2012\" month=\"april\" talk=\"demystifying-druby\" /}",
      "summary": "dRuby stands for \"Distributed Ruby\" and it's one of less known Ruby\nstandard libraries.  It is one of the first use of Metaprogramming\nlong before Rails. dRuby creates proxy objects which lets you to\n\"automagically\"(In Matz's word) delegate method calls to remote objects.\nWhile I was translating [The dRuby Book: Distributed and Parallel Computing with Ruby](http://pragprog.com/book/sidruby/the-druby-book)\nfrom Japanese to English, I had a chance to work with [Masatoshi Seki](https://github.com/seki),\none of the Ruby core committers and has been using Ruby since\nversion 1.2. I learnt a lot of interesting Ruby technique from him\nand would like to share some of them with you.",
      "year": "2012",
      "month": "april"
    },
    {
      "title": "Tokyo Cabinet, Tokyo Tyrant and Kyoto Cabinet: the world of [Mikio](http://1978th.net/) ware",
      "author": "Makoto Inoue",
      "author_link": "http://twitter.com/makoto_inoue",
      "coverage": null,
      "summary": "[Tokyo Cabinet](http://1978th.net/tokyocabinet/) is one of the first \"Key Value\"\nstores. It was released in 2007, but surprisingly small number of people knows\nwhat it is really capable of. Makoto, the maintainer of\n[Tokyo Cabinet Wiki](http://tokyocabinetwiki.pbworks.com) will unveil\nthe core philosophy and exciting features behind these products.",
      "year": "2010",
      "month": "may"
    },
    {
      "title": "Makoto Inoue - Japanese and Ruby",
      "author": "Makoto Inoue",
      "author_link": "http://twitter.com/makoto_inoue",
      "coverage": null,
      "summary": "My talk is based on an article called [\"Japanese and OO\"](http://satoshi.blogs.com/life/2004/09/post.html) which was \nwritten by a Japanese guy who wrote Windows 95 and his thought \naround what helped him to build the software as a Japanese. I \nreally enjoyed the article and thought it relates to Ruby which is \nwritten by another Japanese (the Matz). I will also add some of \nmy own thoughts onto the talk.",
      "year": "2010",
      "month": "december"
    }
  ],
  "Peter Vandenabeele": [
    {
      "title": "Converting a Rails project from MRI to JRuby",
      "author": "Peter Vandenabeele",
      "author_link": "http://vandenabeele.com/",
      "coverage": "{::coverage year=\"2012\" month=\"april\" talk=\"converting-a-rails-project-from-mri-to-jruby\" /}",
      "summary": "Starting from a scaffold Rails app with RSpec and mysql/postgresl\nwhat are the steps to get rspec to pass on JRuby:",
      "year": "2012",
      "month": "april"
    }
  ],
  "Some of the team (Chris Parsons": [
    {
      "title": "Stories from the e-petitions front-line",
      "author": "Some of the team (Chris Parsons",
      "author_link": "Some of the team (http://chrismdp.github.com/",
      "coverage": null,
      "summary": "A talk about caching, chef, munin, load testing and hosting. As part of its adoption of agile\ntechniques and its creation of a Skunkworks division, [DirectGov](http://direct.gov.uk) asked the [Agile Delivery Network](http://www.agiledelivery.net/)\nto build a successor website to the Number 10 e-petitions site with a 6 week deadline. The talk\naims to highlight the measures taken to cope with high throughput, what worked and what could be\ndone differently to avoid headlines like [\"Government's e-petition website crashes on first day\"](http://www.guardian.co.uk/politics/2011/aug/04/government-e-petition-website-crashes).",
      "year": "2011",
      "month": "september"
    }
  ],
  "If you're interested in filling this slot, find out what it means": [
    {
      "title": "Something else",
      "author": "If you're interested in filling this slot, find out what it means",
      "author_link": "If you're interested in filling this slot, /speaking",
      "coverage": null,
      "summary": "",
      "year": "2011",
      "month": "september"
    }
  ],
  "Aanand": [
    {
      "title": "Transformers: Code Blocks In Disguise",
      "author": "Aanand",
      "author_link": "http://aanandprasad.com/",
      "coverage": "{::coverage year=\"2011\" month=\"november\" talk=\"transformers-code-blocks-in-disguise\" /}",
      "summary": "",
      "year": "2011",
      "month": "november"
    }
  ],
  "Abdel": [
    {
      "title": "My Adventures in Objective-C",
      "author": "Abdel",
      "author_link": "http://twitter.com/abdels",
      "coverage": "{::coverage year=\"2011\" month=\"november\" talk=\"my-adventures-in-objective-c\" /}",
      "summary": "I have been ducking Objective-C at every turn for a very long time. Who wants to learn a heavily typed static behemoth just to write an iPhone app?!\nSo, I did what every self respecting programmer would do, throw alternative open solutions aka Javascript frameworks at the problem.\nBut in the end I had to succumb to the will of the Almighty Apple - I needed their Objective C to make stuff happen ... and it wasn't that bad :)\nThis is all the learning, similarities (of which there are a few) and differences between Objective-C and Ruby.",
      "year": "2011",
      "month": "november"
    }
  ],
  "James Coglan": [
    {
      "title": "James Coglan: Primer",
      "author": "James Coglan",
      "author_link": "http://jcoglan.com/",
      "coverage": "{::coverage year=\"2011\" month=\"march\" talk=\"primer\" /}",
      "summary": "It's no secret that expiring caches is hard. But it's also tedious, error-prone,\nand it forces a lot of duplication as your sweeper code is tightly coupled to\nhow your views work. And caching itself introduces complexity: by caching data,\nyou're creating multiple ways to compute the same value.\nWhat if we could get rid of all this? I'm going to take a look at Primer, a Rails\nextension I've been working on that means you'll never write another cache sweeper.\nWith a handful of mixins, you can keep writing your views the way you like and\nPrimer will deal with keeping them snappy. You'll see how you can use ActiveRecord's\nreflections to automate a lot of caching work, how to regenerate your views offline\nusing worker processes, and how to add real-time updates to your pages, all with\ncode you could write during your coffee break.",
      "year": "2011",
      "month": "march"
    },
    {
      "title": "Scheme",
      "author": "James Coglan",
      "author_link": "http://blog.jcoglan.com/",
      "coverage": null,
      "summary": "[Scheme](http://groups.csail.mit.edu/mac/projects/scheme/) is a member \nof the [Lisp](http://en.wikipedia.org/wiki/Lisp_programming_language) \nfamily of languages, and is an excellent place to start if you're \ninterested in writing your own language. It's small and simple to parse, \nyet has several advanced features that are only now becoming mainstream. \nBased on [Heist](http://github.com/jcoglan/heist/), my main interpreter\nproject, I present a brief overview of Scheme and use\n[Treetop](http://treetop.rubyforge.org/) to create a small runtime that \nincludes booleans, integer arithmetic, variables, user-defined functions,\nconditionals, recursion and lexical closures.",
      "year": "2009",
      "month": "may"
    }
  ],
  "Also known as: \"end to end is harder than you think\". Chris Parsons": [
    {
      "title": "Chris Parsons: Lessons learned BDD-ing a command-line utility gem",
      "author": "Also known as: \"end to end is harder than you think\". Chris Parsons",
      "author_link": "Also known as: \"end to end is harder than you think\". http://chrismdp.github.com/",
      "coverage": "{::coverage year=\"2011\" month=\"march\" talk=\"lessons-learned-bdd-ing-a-command-line-utility-gem\" /}",
      "summary": "In this talk Chris will take us through how he test-drove the development of a\ncommand line utility built as a gem, designed to connect to servers\nvia SSH and HTTP. We'll discuss the use of [Aruba](https://github.com/aslakhellesoy/aruba) for command line\ntesting in cucumber, how to deal with external connections, and how to\ndiscover your service interfaces as you build the client.",
      "year": "2011",
      "month": "march"
    }
  ],
  "Some of the team behind alphagov": [
    {
      "title": "Building a prototype site for the UK government",
      "author": "Some of the team behind alphagov",
      "author_link": "Some of the team behind http://alpha.gov.uk",
      "coverage": "{::coverage year=\"2011\" month=\"july\" talk=\"building-a-prototype-site-for-the-uk-government\" /}",
      "summary": "",
      "year": "2011",
      "month": "july"
    }
  ],
  "Sean O'Halpin": [
    {
      "title": "Sean O'Halpin - Processing Tweets at the BBC",
      "author": "Sean O'Halpin",
      "author_link": "https://github.com/seanohalpin",
      "coverage": "{::coverage year=\"2011\" month=\"january\" talk=\"processing-tweets-at-the-bbc\" /}",
      "summary": "I'll be talking about how we're using Ruby to process tweets in\nrealtime to discover inbound links to the [BBC Zeitgeist](http://zeitgeist.prototyping.bbc.co.uk/zeitgeist)\nand how we're reading the [Twitter Firehose](http://dev.twitter.com/pages/streaming_api) (about 1000 tweets/sec =\nabout 90 million a day) and storing the data in Amazon S3.\nThere'll be a bit about [Hadoop](http://hadoop.apache.org/) and [Map/Reduce](http://en.wikipedia.org/wiki/Map_reduce) too.",
      "year": "2011",
      "month": "january"
    },
    {
      "title": "What every computer programmer should know about time",
      "author": "Sean O'Halpin",
      "author_link": "http://twitter.com/seanohalpin",
      "coverage": null,
      "summary": "I've been putting some notes together on time similar in spirit (if\nnot in detail) to [\"What every computer programmer should know about\nfloating-point arithmetic\"](http://docs.sun.com/source/806-3568/ncg_goldberg.html) ranging from\nlocaltime vs [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time), hardware clocks and [NTP](http://en.wikipedia.org/wiki/Network_Time_Protocol), how to do accurate timers\nin Javascript, calendars, date arithmetic, comparisons and gotchas, to\n[Lamport](http://en.wikipedia.org/wiki/Lamport_timestamps)/[vector clocks](http://en.wikipedia.org/wiki/Vector_clock) (the new black in the 'eventually consistent'\nworld of nosql).",
      "year": "2010",
      "month": "april"
    },
    {
      "title": "Ruby FFI",
      "author": "Sean O'Halpin",
      "author_link": "http://seanohalpin.github.com/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "may"
    }
  ],
  "Matthew": [
    {
      "title": "Matthew Rudy Jacobs: \"Building a financial app in ruby and rails, and all the gems I made along the way\"",
      "author": "Matthew",
      "author_link": "http://matthewrudy.com/",
      "coverage": "{::coverage year=\"2011\" month=\"january\" talk=\"building-a-financial-app-in-rails\" /}",
      "summary": "",
      "year": "2011",
      "month": "january"
    }
  ],
  "At the start of the meetings, and during laptop faffing between talks we leave the floor open for the audience.  The idea is that if there's something you want to say to the group (announce you're team is hiring, let people know about a new gem you've written, point out a new conference, ask for help on a personal project, whatever really...) then this is the time to do it.  Just keep it short, if it's longer than a minute, maybe you should think about doing a longer talk": [
    {
      "title": "\"Analogue Blog\"",
      "author": "At the start of the meetings, and during laptop faffing between talks we leave the floor open for the audience.  The idea is that if there's something you want to say to the group (announce you're team is hiring, let people know about a new gem you've written, point out a new conference, ask for help on a personal project, whatever really...) then this is the time to do it.  Just keep it short, if it's longer than a minute, maybe you should think about doing a longer talk",
      "author_link": "At the start of the meetings, and during laptop faffing between talks we leave the floor open for the audience.  The idea is that if there's something you want to say to the group (announce you're team is hiring, let people know about a new gem you've written, point out a new conference, ask for help on a personal project, whatever really...) then this is the time to do it.  Just keep it short, if it's longer than a minute, maybe you should think about /speaking/",
      "coverage": null,
      "summary": "",
      "year": "2011",
      "month": "january"
    }
  ],
  "Gareth Rushgrove": [
    {
      "title": "Chef and Vagrant",
      "author": "Gareth Rushgrove",
      "author_link": "http://morethanseven.net/",
      "coverage": "{::coverage year=\"2011\" month=\"august\" talk=\"vagrant-and-chef\" /}",
      "summary": "Most developers spend far too much time managing a development\nenvironment that is different to the one they use for production\napplications. Different tools, different underlying libraries and\ndifferent bugs. Local virtualisation provides an answer, but\nhistorically it's been time consuming and annoying to setup and\nmanage. Using configuration management tools like [Chef](http://www.opscode.com/chef/) to set things\nup, and [Vagrant](http://vagrantup.com/) to easily manage the virtual machines\nfrom the command line provides modern developers the best of all\npossible worlds.",
      "year": "2011",
      "month": "august"
    }
  ],
  "Ben Scofield": [
    {
      "title": "Ben Scofield: Building Cloud Castles",
      "author": "Ben Scofield",
      "author_link": "http://benscofield.com/",
      "coverage": "{::coverage year=\"2011\" month=\"april\" talk=\"building-cloud-castles\" /}",
      "summary": "A year ago, I was a committed VPS and dedicated-machine deployer. I thought the cloud\nimposed silly restrictions - how dare you take away my shell account! Whaddya mean I\ncan't save files locally?\nSince then, I've had some interesting experiences. I've worked on big cloud-deployed\nsystems, and certain large traditionally-deployed systems, and I've seen how a lot of\nthe decisions that you're ... encouraged to make when designing an app to run in the\ncloud. Most interestingly, I've discovered how those same decisions can make for a\nmuch better app regardless of where it'll end up. In this talk, I'll share those\narchitectural patterns with you, and show why they work. Hopefully, I'll convince all\nof you to build cloud castles -- even if you've got your foundation firmly on the\nground.",
      "year": "2011",
      "month": "april"
    }
  ],
  "Priit Tamboom": [
    {
      "title": "Rails 3 Internals",
      "author": "Priit Tamboom",
      "author_link": "http://priit.mx.ee/",
      "coverage": null,
      "summary": "Recently I have been porting an app into Rails 3 and probably you have\nalso been poking this new Rails 3 with ruby 1.9.2.\nTherefore I would like to discuss a bit more about Rails 3 itself.\nParticularly, things under railties lib directory covering classes\nsuch as Railtie, Engine, Application and will go through\ninitialization with initializers.\nAlong the way I'll show some examples how you can use this knowledge\nin your own gem or plugin.\nNothing too fancy but should be useful for developing your next Rails\n3 project.",
      "year": "2010",
      "month": "september"
    }
  ],
  "Alex MacCaw": [
    {
      "title": "Asynchronous interfaces",
      "author": "Alex MacCaw",
      "author_link": "http://www.eribium.org/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "september"
    }
  ],
  "We start the meetings with announcements for the group.  If there's something you think the group should know, or something you're looking for help with, this is the time to say it.  You don't have to ask for permission, just get up and say your piece.  Just keep it short so you don't eat into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk": [
    {
      "title": "\"Analogue Blog\"",
      "author": "We start the meetings with announcements for the group.  If there's something you think the group should know, or something you're looking for help with, this is the time to say it.  You don't have to ask for permission, just get up and say your piece.  Just keep it short so you don't eat into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk",
      "author_link": "We start the meetings with announcements for the group.  If there's something you think the group should know, or something you're looking for help with, this is the time to say it.  You don't have to ask for permission, just get up and say your piece.  Just keep it short so you don't eat into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about /speaking/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "september"
    }
  ],
  "This month we'll be having a Cucumber": [
    {
      "title": "Cucumber Workshop",
      "author": "This month we'll be having a Cucumber",
      "author_link": "This month we'll be having a http://cuckes.info",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "october"
    }
  ],
  "We start the meetings with short announcements about anything and everything that the group might be interested in.  We announce when people are hiring, we announce new conferences that people might want to attend or present at, we announce interesting blog posts to spark debate in the pub afterwards.  Anything goes really!  You don't have to ask for permission, just get up and say your piece, but keep it quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk": [
    {
      "title": "\"Analogue Blog\"",
      "author": "We start the meetings with short announcements about anything and everything that the group might be interested in.  We announce when people are hiring, we announce new conferences that people might want to attend or present at, we announce interesting blog posts to spark debate in the pub afterwards.  Anything goes really!  You don't have to ask for permission, just get up and say your piece, but keep it quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk",
      "author_link": "We start the meetings with short announcements about anything and everything that the group might be interested in.  We announce when people are hiring, we announce new conferences that people might want to attend or present at, we announce interesting blog posts to spark debate in the pub afterwards.  Anything goes really!  You don't have to ask for permission, just get up and say your piece, but keep it quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about /speaking/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "october"
    },
    {
      "title": "\"Analogue Blog\"",
      "author": "We start the meetings with short announcements about anything and everything that the group might be interested in.  We announce when people are hiring, we announce new conferences that people might want to attend or present at, we announce interesting blog posts to spark debate in the pub afterwards.  Anything goes really!  You don't have to ask for permission, just get up and say your piece, but keep it quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk",
      "author_link": "We start the meetings with short announcements about anything and everything that the group might be interested in.  We announce when people are hiring, we announce new conferences that people might want to attend or present at, we announce interesting blog posts to spark debate in the pub afterwards.  Anything goes really!  You don't have to ask for permission, just get up and say your piece, but keep it quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about /speaking/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "november"
    }
  ],
  "Kalv will give an overview of Websockets and how to get a simple app up and running with Cramp": [
    {
      "title": "Kalvir Sandhu - More Websockets",
      "author": "Kalv will give an overview of Websockets and how to get a simple app up and running with Cramp",
      "author_link": "Kalv will give an overview of Websockets and how to get a simple app up and running with http://github.com/lifo/cramp",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "november"
    }
  ],
  "Dan Lucraft": [
    {
      "title": "(j)ruby profilers",
      "author": "Dan Lucraft",
      "author_link": "http://danlucraft.com/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "may"
    }
  ],
  "This month Chris Parsons": [
    {
      "title": "Software Craftsmanship",
      "author": "This month Chris Parsons",
      "author_link": "This month http://pa.rsons.org",
      "coverage": null,
      "summary": "Where the agile movement focused on principles for developing better software, the software craftsmanship movement\nfocuses on developing better software developers, growing out of a frustration with the current state of the software\ndevelopment industries. Starting with [Uncle Bob's keynote about 'craft over crap'](http://blog.objectmentor.com/articles/2008/08/14/quintessence-the-fifth-element-for-the-agile-manifesto), many companies and individuals\nstarted looking at concrete ways to advance our field into a true profession; the focus generally resting on two key\nareas: ways to effectively acquire new practices and ways to bring new people into our field.Chris and Corey will\nbe presenting their thoughts on how this affects businesses and personal careers.\nWith the emphasis on developer improvement, might we lose the focus on delivering business value?  Chris will talk\nabout how craftsmanship ideas have been applied at [Eden](http://www.edendevelopment.co.uk/), showing there doesn't have to be a conflict between these\ntwo goals.\nThe terms 'apprentice' and 'journeyman' are often thrown around without really defining what they mean in terms of\nacquiring skills and techniques.  Corey will discuss these words, describing concrete definitions that go past the\nFUD often associated with them (nobody is asking you to doff your cap or mop the floors with a toothbrush).\nWe will then hold a Q&A session and answer people's questions and comments.  If there's time, Corey will discuss\nand perform a code kata, one helpful way to practice our techniques.",
      "year": "2010",
      "month": "march"
    }
  ],
  "Jonathan Leighton": [
    {
      "title": "Carat: An interpreted language, written in Ruby",
      "author": "Jonathan Leighton",
      "author_link": "http://jonathanleighton.com/",
      "coverage": null,
      "summary": "I ended up writing an interpreter, in Ruby, for a language\nheavily inspired by Ruby. A sort of distilled Ruby-like language which\nis far too simplistic to be useful and probably overlooks tonnes of\nimportant things.\nBut anyway! The point is not really that the language is utterly\npointless. The point is that it's an interpreter written in a very\nhigh-level language, which I think it relatively easy to understand.\nSo I'm offering to do a talk which would take the listener through the\nworkings of this interpreter. The parsing is done with Treetop, although\nI wouldn't propose really talking about the parsing at all as I think a\nlot of people are quite familiar with Treetop.\nI might as well finish with some buzzwords. If you ever wondered what\n\"trampoline function\" or \"continuation passing style\" means then this is\nyour chance :)",
      "year": "2010",
      "month": "july"
    }
  ],
  "Mark Evans": [
    {
      "title": "Dragonfly",
      "author": "Mark Evans",
      "author_link": "http://github.com/markevans",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "january"
    }
  ],
  "Daniel Lucraft": [
    {
      "title": "An update on Redcar",
      "author": "Daniel Lucraft",
      "author_link": "http://danlucraft.com/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "january"
    },
    {
      "title": "Redcar: Ruby, Gnome and Textmate",
      "author": "Daniel Lucraft",
      "author_link": "http://daniellucraft.com/",
      "coverage": null,
      "summary": "Redcar is a programmer's text editor for Gnome, written in Ruby. In this talk I'll\nshow off Redcar's features, and then take a look into how it's implemented. We'll also\nlook at the [Ruby-GNOME2](http://ruby-gnome2.sourceforge.jp/) bindings, and how to interface [Vala](http://live.gnome.org/Vala) (a C# like language) with Ruby\nfor performance.",
      "year": "2009",
      "month": "march"
    },
    {
      "title": "Top Ten Most Horrendous Ruby Hacks",
      "author": "Daniel Lucraft",
      "author_link": "www.daniellucraft.com/blog",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "september"
    }
  ],
  "*Sean was ill so he didn't make this meeting, he did however make it to our January 2011 meeting": [
    {
      "title": "<strike>Sean O'Halpin - Processing Tweets at the BBC</strike>",
      "author": "*Sean was ill so he didn't make this meeting, he did however make it to our January 2011 meeting",
      "author_link": "*Sean was ill so he didn't make this meeting, he did however make it to our /meetings/2010/12/01/december-2010-meeting/",
      "coverage": null,
      "summary": "I'll be talking about how we're using Ruby to process tweets in\nrealtime to discover inbound links to the [BBC Zeitgeist](http://zeitgeist.prototyping.bbc.co.uk/zeitgeist)\nand how we're reading the [Twitter Firehose](http://dev.twitter.com/pages/streaming_api) (about 1000 tweets/sec =\nabout 90 million a day) and storing the data in Amazon S3.\n\nThere'll be a bit about [Hadoop](http://hadoop.apache.org/) and [Map/Reduce](http://en.wikipedia.org/wiki/Map_reduce) too.",
      "year": "2010",
      "month": "december"
    }
  ],
  "Our meetings have space, usually at the start, but also between the talks if there's a lot of laptop faffing, for announcements from the audience.  If you have something you think is of interest to the group; perhaps a new conferences has announced their CFP or ticket discount, or there's a new gem you want to let people know about, or maybe your team of awesome ninja rockstars is hiring.  Whatever!  There's no need to ask permission; get up, say your thing and sit down again.  Just be quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk": [
    {
      "title": "\"Analogue Blog\"",
      "author": "Our meetings have space, usually at the start, but also between the talks if there's a lot of laptop faffing, for announcements from the audience.  If you have something you think is of interest to the group; perhaps a new conferences has announced their CFP or ticket discount, or there's a new gem you want to let people know about, or maybe your team of awesome ninja rockstars is hiring.  Whatever!  There's no need to ask permission; get up, say your thing and sit down again.  Just be quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about doing a longer talk",
      "author_link": "Our meetings have space, usually at the start, but also between the talks if there's a lot of laptop faffing, for announcements from the audience.  If you have something you think is of interest to the group; perhaps a new conferences has announced their CFP or ticket discount, or there's a new gem you want to let people know about, or maybe your team of awesome ninja rockstars is hiring.  Whatever!  There's no need to ask permission; get up, say your thing and sit down again.  Just be quick so you don't run on into the time for the scheduled talks.  In fact if it's longer than a minute, maybe you should think about /speaking/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "december"
    }
  ],
  "Tim Cowlishaw": [
    {
      "title": "Making old projects better",
      "author": "Tim Cowlishaw",
      "author_link": "http://timcowlishaw.co.uk/",
      "coverage": null,
      "summary": "Most of us want better software development processes, and spend a lot of\ntime reading and talking about methods for making better software. However,\nwhen you've already been working on a project for a long time, entropy can\nget the better of you, making it difficult to adapt your working practices.\nWe've been working on a project like this that started 18 months ago, and\nover the last few months have been steadily improving how we go about things,\ngetting better at BDD and Scrum, and starting to do a bit of Domain Driven\nDesign. We're going to talk about how we got on, focusing in equal parts on\nrefactoring legacy code bases, improving test coverage, and improving\nprocesses, as well as revealing the incredible powers of suggestion we\nemployed to convince stakeholders, management and sundry doubters that this\nwas a good idea.",
      "year": "2010",
      "month": "august"
    }
  ],
  "Tom Crinson": [
    {
      "title": "[ittybittyboom.com](http://ittybittyboom.com)",
      "author": "Tom Crinson",
      "author_link": "http://mrjaba.posterous.com/",
      "coverage": null,
      "summary": "You'll find out how and why I use [cramp](http://github.com/lifo/cramp) to cope with hundreds of simultaneous\nplayers on [ittybittyboom.com](http://ittybittyboom.com).  Cramp is an asynchronous\nevent driven ruby based framework based upon event machine that allows the coder to\nwrite succinct, clear code to deal with hundreds or thousands of tcp connections at once.",
      "year": "2010",
      "month": "august"
    }
  ],
  "Seth Edwards": [
    {
      "title": "MongoDB",
      "author": "Seth Edwards",
      "author_link": "http://codesnotdead.blogspot.com/",
      "coverage": null,
      "summary": "",
      "year": "2010",
      "month": "april"
    }
  ],
  "For this meeting we'll be running a Coding Dojo": [
    {
      "title": "Coding Dojo",
      "author": "For this meeting we'll be running a Coding Dojo",
      "author_link": "For this meeting we'll be running a http://codingdojo.org/cgi-bin/wiki.pl?WhatIsCodingDojo",
      "coverage": null,
      "summary": "The Dojo starts with the definition of a problem to be worked on.  It'll be something relatively simple,\nbut with enough scope for plenty of interesting choices to be made about the design.  We'll have one\nlaptop connected to a projector and two developers will pair on it to iterate towards a solution.  Every\nso often, the \"driving\" developer (the one at the keyboard) will sit down, the other developer will\nbecome the \"driver\" and another member of the group will step up to complete the pair.  Lather,\nrinse, repeat.",
      "year": "2009",
      "month": "september"
    }
  ],
  "Following on from last month": [
    {
      "title": "\"Analogue Blog\"",
      "author": "Following on from last month",
      "author_link": "Following on from http://lists.lrug.org/pipermail/chat-lrug.org/2009-August/003971.html",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "september"
    }
  ],
  "During our last meeting, Tom was surprised by how many people (both Ruby newbies and \"Rails not Ruby\" programmers) were asking questions about Enumerable": [
    {
      "title": "[Tom Stuart](http://experthuman.com/) : Enumerators",
      "author": "During our last meeting, Tom was surprised by how many people (both Ruby newbies and \"Rails not Ruby\" programmers) were asking questions about Enumerable",
      "author_link": "During our last meeting, Tom was surprised by how many people (both Ruby newbies and \"Rails not Ruby\" programmers) were asking questions about http://www.ruby-doc.org/core/classes/Enumerable.html",
      "coverage": "{::coverage year=\"2009\" month=\"october\" talk=\"thinking-functionally-in-ruby\" /}",
      "summary": "",
      "year": "2009",
      "month": "october"
    }
  ],
  "We still have room for one more speakers, or we can let Tom and Brent talk for longer.  Let us know": [
    {
      "title": "Others",
      "author": "We still have room for one more speakers, or we can let Tom and Brent talk for longer.  Let us know",
      "author_link": "We still have room for one more speakers, or we can let Tom and Brent talk for longer.  /speaking/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "october"
    }
  ],
  "We missed out on this during the Dojo meeting last month": [
    {
      "title": "\"Analogue Blog\"",
      "author": "We missed out on this during the Dojo meeting last month",
      "author_link": "We missed out on this during the /meetings/2009/08/18/september-2009-meeting/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "october"
    }
  ],
  "John offered to do a talk about Puppet": [
    {
      "title": "[John Arundel](http://bitfieldconsulting.com/): Is Your Sysadmin Dumber Than a Hamster? How to automate your sysadmin out of a job, and into a more interesting job.",
      "author": "John offered to do a talk about Puppet",
      "author_link": "John offered to do a talk about http://reductivelabs.com/products/puppet",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "november"
    }
  ],
  "Julian Simpson": [
    {
      "title": "[Julian Simpson](http://www.juliansimpson.org/): Drunken Build Monkey",
      "author": "Julian Simpson",
      "author_link": "http://www.juliansimpson.org/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "november"
    }
  ],
  "At the start of each meeting we have 10-15 minutes set aside for people to speak about anything they think is of interest to the group.  It's \"open\" style, so you don't need to ask for permission, just turn up and say something.  In the past we've had overviews of recent conferences, discussions of alternative JS frameworks for Rails, announcements about new events, calls for help reviewing patches for Rails, a quick demo of a new gem.  Basically anything you might post a link to on something like Ruby Flow": [
    {
      "title": "\"Analogue Blog\"",
      "author": "At the start of each meeting we have 10-15 minutes set aside for people to speak about anything they think is of interest to the group.  It's \"open\" style, so you don't need to ask for permission, just turn up and say something.  In the past we've had overviews of recent conferences, discussions of alternative JS frameworks for Rails, announcements about new events, calls for help reviewing patches for Rails, a quick demo of a new gem.  Basically anything you might post a link to on something like Ruby Flow",
      "author_link": "At the start of each meeting we have 10-15 minutes set aside for people to speak about anything they think is of interest to the group.  It's \"open\" style, so you don't need to ask for permission, just turn up and say something.  In the past we've had overviews of recent conferences, discussions of alternative JS frameworks for Rails, announcements about new events, calls for help reviewing patches for Rails, a quick demo of a new gem.  Basically anything you might post a link to on something like http://rubyflow.com",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "november"
    }
  ],
  "Roland Swingler": [
    {
      "title": "Treetop",
      "author": "Roland Swingler",
      "author_link": "http://knaveofdiamonds.tumblr.com/",
      "coverage": null,
      "summary": "Regular expressions are great but they're unreadable when complex, and\nthere are some things they just can't do. The alternative is to build\na language parser - but that's really hard, isn't it? In this talk,\nI'll try and dispell that idea and show how building little languages\nin ruby is really simple. I'll show two examples: defining a\nmini-language from scratch to build XMPP bots, and using it as part of\nyour screen-scraping toolbox.",
      "year": "2009",
      "month": "may"
    }
  ],
  "Aidy Lewis": [
    {
      "title": "Cucumber, Celerity, & FireWatir",
      "author": "Aidy Lewis",
      "author_link": "http://agiletester.blogspot.com/",
      "coverage": null,
      "summary": "The talk will explain Story-Driven-Development(SDD) and its benefits. A sample application will be\nbuilt in real-time using SDD with [Rspec](http://rspec.info/) [Cucumber](http://cukes.info). Tests \nwill be run in-browser with [FireWatir](http://wiki.openqa.org/display/WTR/FireWatir) and through \na headless-browser using [Celerity](http://celerity.rubyforge.org/) and [JRuby](http://jruby.codehaus.org/).",
      "year": "2009",
      "month": "march"
    },
    {
      "title": "Ruby / Watir",
      "author": "Aidy Lewis",
      "author_link": "http://agiletester.blogspot.com/",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "august"
    }
  ],
  "Patrick Sinclair": [
    {
      "title": "RDF in Rails",
      "author": "Patrick Sinclair",
      "author_link": "http://metade.org",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "june"
    }
  ],
  "Abdel A. Saleh": [
    {
      "title": "DSL Or A Code Smell...",
      "author": "Abdel A. Saleh",
      "author_link": "http://twitter.com/abdels",
      "coverage": null,
      "summary": "DSLs are very powerful tools but are they always necessary?\nThis is a tale in code about my work on a small 'Request Throttling' library where I thought I\nneeded a DSL but it turned out I was sorely mistaken. I'll highlight some common DSLing\ntechniques and the decisions that steered me away from them.",
      "year": "2009",
      "month": "june"
    }
  ],
  "Tom Lea": [
    {
      "title": "2 Apps, 1 Test : Distributed Ruby Unit Testing",
      "author": "Tom Lea",
      "author_link": "http://tomlea.co.uk/",
      "coverage": null,
      "summary": "A library for running tests across multiple applications from\na single test case.\nOver 14% more awesome than a bag of chips.",
      "year": "2009",
      "month": "june"
    }
  ],
  "Tomasz Wegrzanowski": [
    {
      "title": "Ruby+Arduino",
      "author": "Tomasz Wegrzanowski",
      "author_link": "http://t-a-w.blogspot.com/",
      "coverage": null,
      "summary": "[Arduino](http://www.arduino.cc/) is an inexpensive Open Source physical computing\nplatform which makes building interactive gadgets of your design\nmuch easier on the hardware side. Now let's add some Ruby\nso programming those gadgets becomes easy too...",
      "year": "2009",
      "month": "july"
    },
    {
      "title": "RLisp - Lisp inside Ruby",
      "author": "Tomasz Wegrzanowski",
      "author_link": "http://t-a-w.blogspot.com/",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "september"
    }
  ],
  "Paul Carey": [
    {
      "title": "Couch DB",
      "author": "Paul Carey",
      "author_link": "http://pa.ulcarey.com/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "january"
    }
  ],
  "Paul Mison": [
    {
      "title": "Abstractions For Website APIs",
      "author": "Paul Mison",
      "author_link": "http://husk.org/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "january"
    }
  ],
  "There's always time for a drink after the meeting and we usually head to The Crown Tavern": [
    {
      "title": "Pub",
      "author": "There's always time for a drink after the meeting and we usually head to The Crown Tavern",
      "author_link": "There's always time for a drink after the meeting and we usually head to http://fancyapint.com/pubs/pub199.html",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "january"
    }
  ],
  "This month (just like we did last February": [
    {
      "title": "Lightning Talks",
      "author": "This month (just like we did last February",
      "author_link": "This month (just like we did /meetings/2008/01/25/february-2008-meeting/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "february"
    }
  ],
  "Alex Young": [
    {
      "title": "DDD (Domain Driven Design)",
      "author": "Alex Young",
      "author_link": "http://blog.blackkettle.org/",
      "coverage": null,
      "summary": "I *also* think that of the major Ruby ORM libraries, only Sequel is really\naligned with DDD in the first place, so if you're using anything else you've\nalready compromised the model (although again, possibly that's a discussion\nfor another time).",
      "year": "2009",
      "month": "december"
    }
  ],
  "Rob Holland": [
    {
      "title": "Javascript Stories: The Animal, Mineral or Vegetable guide to testing javascript in web applications.",
      "author": "Rob Holland",
      "author_link": "http://blog.the-it-refinery.co.uk",
      "coverage": null,
      "summary": "The talk will cover how to use [capybara](http://github.com/jnicklas/capybara) with\n[cucumber](http://cukes.info/) to easily write and run stories including javascript\nfunctionality. The talk should be useful to people who don't currently test their\njavascript, or those who are already doing so with another framework.",
      "year": "2009",
      "month": "december"
    }
  ],
  "At the start of each meeting we have 10-15 minutes set aside for anyone in the room to speak.  It's run \"open\" style, so you don't need to ask for permission, just stand up and say something.  In the past we've had new site announcements, gem demos, new framework announcements, overviews of recent conferences; basically anything you might post a link to on something like Ruby Flow": [
    {
      "title": "\"Analogue Blog\"",
      "author": "At the start of each meeting we have 10-15 minutes set aside for anyone in the room to speak.  It's run \"open\" style, so you don't need to ask for permission, just stand up and say something.  In the past we've had new site announcements, gem demos, new framework announcements, overviews of recent conferences; basically anything you might post a link to on something like Ruby Flow",
      "author_link": "At the start of each meeting we have 10-15 minutes set aside for anyone in the room to speak.  It's run \"open\" style, so you don't need to ask for permission, just stand up and say something.  In the past we've had new site announcements, gem demos, new framework announcements, overviews of recent conferences; basically anything you might post a link to on something like http://rubyflow.com",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "december"
    }
  ],
  "Taryn East": [
    {
      "title": "Making your rails app kick ass with ruby-prof and kcachegrind",
      "author": "Taryn East",
      "author_link": "http://www.taryneast.com/",
      "coverage": null,
      "summary": "I've used the [ruby-prof](http://ruby-prof.rubyforge.org/) and\n[kcachegrind](http://kcachegrind.sourceforge.net/html/Home.html) tools a few\ntimes to profile some of the rails projects I've worked on. They're powerful\ntools that can let you dig down into the bowels of your code and find the\nreal trouble-makers, but they require a bit of familiarity as they really\nare a bit of information-overload. So I thought I could give a talk on\nhow to set them up - where/how to use them and what they can do for you.",
      "year": "2009",
      "month": "august"
    }
  ],
  "Alex Graul": [
    {
      "title": "AMQP in Ruby",
      "author": "Alex Graul",
      "author_link": "http://www.sho.ch/",
      "coverage": null,
      "summary": "[AMQP](http://amqp.org) is a powerful, flexible and completely open messaging standard. Capable of\nscaling to millions of messages a second with incredibly low latency, AMQP is an\nfantastic backbone on which to build service architectures. In this talk I'll give\nyou an overview of the AMQP standard, an introduction to synchronous and asynchronous\nlibraries for working with AMQP in Ruby and some examples uses.",
      "year": "2009",
      "month": "august"
    }
  ],
  "<del>Stealing</del><ins>Borrowing</ins> an idea from the Sydney Ruby User Group": [
    {
      "title": "\"Analogue Blog\"",
      "author": "<del>Stealing</del><ins>Borrowing</ins> an idea from the Sydney Ruby User Group",
      "author_link": "<del>Stealing</del><ins>Borrowing</ins> an idea from the http://rubyonrails.com.au/sydney-meetups",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "august"
    }
  ],
  "Martin Kleppmann": [
    {
      "title": "Ruby Invoicing Framework Gem",
      "author": "Martin Kleppmann",
      "author_link": "http://www.yes-no-cancel.co.uk/",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "april"
    }
  ],
  "Jon Gilbraith": [
    {
      "title": "A Modular Approach to Views",
      "author": "Jon Gilbraith",
      "author_link": "http://www.completelynovel.com/people/1",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "april"
    }
  ],
  "Paul Jensen": [
    {
      "title": "Using Geokit in Social Apps",
      "author": "Paul Jensen",
      "author_link": "http://new-bamboo.co.uk/people",
      "coverage": null,
      "summary": "",
      "year": "2009",
      "month": "april"
    }
  ],
  "Steve Ganly": [
    {
      "title": "Event Stream and LRUG Quiz",
      "author": "Steve Ganly",
      "author_link": "http://concept-shop.com/",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "october"
    }
  ],
  "Kresten Krab Thorup": [
    {
      "title": "Challenges in making Ruby run effectively on a JVM",
      "author": "Kresten Krab Thorup",
      "author_link": "http://www.version2.dk/blogs/krestenkrabthorup",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "march"
    }
  ],
  "Thomas Pomfret": [
    {
      "title": "mobileAct: a high-risk Rails app for Channel 4",
      "author": "Thomas Pomfret",
      "author_link": "http://mintdigital.com/",
      "coverage": null,
      "summary": "mobileAct Unsigned is Channel 4 TV search for the best unsigned band in Britain. The site lets bands and fans to communicate and \nshare media. In addition, users get to vote on who should win the million pound recording deal. \"mobileAct: a high-risk Rails app\nfor Channel 4\" will report back on Mint's experiences building this mass-market application. In the light of recent TV voting \nscandals, the spotlight was on voting. In a very public arena, we had to make sure not only that the vote was fair, but that \nit could be seen to be fair.",
      "year": "2008",
      "month": "march"
    }
  ],
  "Andrew Stewart": [
    {
      "title": "Handling Long-Running Tasks in Rails",
      "author": "Andrew Stewart",
      "author_link": "http://blog.airbladesoftware.com/",
      "coverage": null,
      "summary": "Rails is a web framework and thus designed for HTTP's synchronous request and response: you make a request to the application, \nthe application executes it and returns the response. For your application to feel snappy its filters and actions should take \nno more than a few milliseconds to execute. But what do you do if you need to run a task that takes more than a few \nmilliseconds? Perhaps ten minutes or even longer? You need to move execution off the request-response thread and onto\na different one.\nRails doesn't support this out of the box and it's not obvious how to do this correctly. Happily a number of plugins fill \nthe gap. They all work differently, though, and cater for different situations. The one you need for your application \ndepends on your situation.\nThis session lays out all your options and explains where each plugin is best suited. It shows you how to work with each \nplugin. By the end you will be able to make an informed decision about which one you need in any given situation - and how \nto use it well.",
      "year": "2008",
      "month": "march"
    }
  ],
  "Ben Hood kindly offered to step in and talk about some work he's been doing with RabbitMQ": [
    {
      "title": "RabbitMQ + Ruby",
      "author": "Ben Hood kindly offered to step in and talk about some work he's been doing with RabbitMQ",
      "author_link": "Ben Hood kindly offered to step in and talk about some work he's been doing with http://www.rabbitmq.com/",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "july"
    }
  ],
  "Francis Irving": [
    {
      "title": "Acts As Xapian",
      "author": "Francis Irving",
      "author_link": "http://flourish.org/",
      "coverage": null,
      "summary": "I'd like to give a talk about my new Rails search engine plugin,\nwhich is called [acts_as_xapian](http://github.com/frabcus/acts_as_xapian/)",
      "year": "2008",
      "month": "july"
    }
  ],
  "This month, we're going to have a series of lightning talks from various members of the local ruby community.  To make it even more interesting, all the presentations will follow the 20x20 slide format (also known as Pecha Kucha": [
    {
      "title": "Lightning Talks",
      "author": "This month, we're going to have a series of lightning talks from various members of the local ruby community.  To make it even more interesting, all the presentations will follow the 20x20 slide format (also known as Pecha Kucha",
      "author_link": "This month, we're going to have a series of lightning talks from various members of the local ruby community.  To make it even more interesting, all the presentations will follow the 20x20 slide format (also known as http://en.wikipedia.org/wiki/Pecha_Kucha",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "february"
    }
  ],
  "The kind folk organising the QCon": [
    {
      "title": "QCon Ticket Raffle",
      "author": "The kind folk organising the QCon",
      "author_link": "The kind folk organising the http://qcon.infoq.com/london/conference/",
      "coverage": null,
      "summary": "",
      "year": "2008",
      "month": "february"
    }
  ],
  "Stephen Bartholomew": [
    {
      "title": "StaticMatic",
      "author": "Stephen Bartholomew",
      "author_link": "http://www.stephenbartholomew.co.uk/",
      "coverage": null,
      "summary": "CMS is overrated. A lot of the time, clients want us to do what we do \nbest - well designed pages with structured, accessible and maintainable \nmarkup & styling.\nCMSs are often sufficient for this, but sometimes they can be restrictive\nand more cumbersome than just working with good ol' source code. At the\nsame time we want our code to be structured, DRY and flexible.",
      "year": "2007",
      "month": "september"
    }
  ],
  "Tom Armitage": [
    {
      "title": "Hpricot, Merb, Net::TOC",
      "author": "Tom Armitage",
      "author_link": "http://infovore.org",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "september"
    },
    {
      "title": "Code Kata's",
      "author": "Tom Armitage",
      "author_link": "http://infovore.org",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "june"
    }
  ],
  "Ian White": [
    {
      "title": "resouces_controller",
      "author": "Ian White",
      "author_link": "http://blog.ardes.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "october"
    }
  ],
  "DJ Walker-Morgan": [
    {
      "title": "Netbeans - The open source Ruby IDE written in *cough*Java*cough*",
      "author": "DJ Walker-Morgan",
      "author_link": "http://codepope.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "october"
    }
  ],
  "Matthew Wilson": [
    {
      "title": "Building a UI framework on top of Rails",
      "author": "Matthew Wilson",
      "author_link": "http://devblog.playlouder.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "november"
    }
  ],
  "Matt Patterson": [
    {
      "title": "Scripting OS X with Ruby",
      "author": "Matt Patterson",
      "author_link": "http://reprocessed.org/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "november"
    }
  ],
  "Martin Sadler": [
    {
      "title": "Distributed Processing Using Ruby on Rails",
      "author": "Martin Sadler",
      "author_link": "http://beyondthetype.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "may"
    }
  ],
  "We still have a bunch of code left over from the March meeting": [
    {
      "title": "Code Review",
      "author": "We still have a bunch of code left over from the March meeting",
      "author_link": "We still have a bunch of code left over from the http://lrug.org./meetings/2007/02/19/march-2007-meeting/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "may"
    }
  ],
  "Postponed from last month's meeting": [
    {
      "title": "OpenID",
      "author": "Postponed from last month's meeting",
      "author_link": "Postponed from /meetings/2007/05/06/may-2007-meeting/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "june"
    }
  ],
  "First up we have James Mead": [
    {
      "title": "Mocking",
      "author": "First up we have James Mead",
      "author_link": "First up we have http://www.floehopper.org/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "july"
    }
  ],
  "After much demand for a talk about RSpec": [
    {
      "title": "RSpec",
      "author": "After much demand for a talk about RSpec",
      "author_link": "After much demand for a talk about http://rspec.rubyforge.org/",
      "coverage": "{::coverage year=\"2007\" month=\"july\" talk=\"rspec-on-rails\" /}",
      "summary": "",
      "year": "2007",
      "month": "july"
    }
  ],
  "We've got Richard Livsey": [
    {
      "title": "Saving The World With Rails",
      "author": "We've got Richard Livsey",
      "author_link": "We've got http://livsey.org/",
      "coverage": null,
      "summary": "Richard will discuss his experience with Ruby and Rails and what he has found whilst developing a suite of \napplications to prepare for and respond to disasters. Specifically, he will look at how Ruby helped him and \nCitySafe rapidly prototype an application to model liquid gas spills, some of the plug-ins they have developed. \nHe will also touch upon building RESTful applications in Rails.",
      "year": "2007",
      "month": "february"
    }
  ],
  "_Unfortunately Paolo was unable to make it for this meeting due to illness, however, he did make it for the April meeting instead": [
    {
      "title": "TabNav",
      "author": "_Unfortunately Paolo was unable to make it for this meeting due to illness, however, he did make it for the April meeting instead",
      "author_link": "_Unfortunately Paolo was unable to make it for this meeting due to illness, however, he did make it for the /meetings/2007/04/04/april-2007-meeting/",
      "coverage": null,
      "summary": "Paolo will show us the [tabnav plugin](http://blog.seesaw.it/pages/tabnav), and discuss its implementation. This plugin raises a few questions on \nhow we deal with view components. Is it ok to have configurable and ready-to-use widgets instead of rails \nhelpers? How should those widgets be configured? Is it ok to write a specific DSL for each widget? This \npresentation raises many questions, and Paolo will give us his point of view and try to stimulate a \ndiscussion around it.",
      "year": "2007",
      "month": "february"
    }
  ],
  "Thomas R Koll": [
    {
      "title": "Rails CMS Roundup",
      "author": "Thomas R Koll",
      "author_link": "http://tomk32.de",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "december"
    }
  ],
  "Ruby 1.9 is scheduled for release around Christmas 2007 and Murray Steele": [
    {
      "title": "Ruby 1.9",
      "author": "Ruby 1.9 is scheduled for release around Christmas 2007 and Murray Steele",
      "author_link": "Ruby 1.9 is scheduled for release around Christmas 2007 and http://h-lame.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "december"
    }
  ],
  "Our main speaker for this meeting is Frederik Fix": [
    {
      "title": "Ruby2Ruby",
      "author": "Our main speaker for this meeting is Frederik Fix",
      "author_link": "Our main speaker for this meeting is http://derfred.com/",
      "coverage": null,
      "summary": "quite advanced and very experimental. But that makes\nit all the more interesting.",
      "year": "2007",
      "month": "august"
    }
  ],
  "Jay Phillips": [
    {
      "title": "Adhearsion",
      "author": "Jay Phillips",
      "author_link": "http://jicksta.com/",
      "coverage": null,
      "summary": "Adhearsion's creator Jay Phillips will discuss Ruby's work in VoIP and how \neven complete telephony novices can powerfully develop their own VoIP system \nwith Asterisk and Adhearsion using pure-Ruby for all application logic. \nAttendees will see Jay develop a sophisticated Adhearsion application that \nintegrates and handles calls from the public telephone network and integrates \nwith a Rails application. Adding a voice component to a web application is \nmuch easier than you think!",
      "year": "2007",
      "month": "august"
    }
  ],
  "Stephen Bartholomew's": [
    {
      "title": "StaticMatic",
      "author": "Stephen Bartholomew's",
      "author_link": "http://www.stephenbartholomew.co.uk/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "august"
    }
  ],
  "The Crown Tavern": [
    {
      "title": "Pub",
      "author": "The Crown Tavern",
      "author_link": "http://fancyapint.com/pubs/pub199.html",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "august"
    }
  ],
  "First up, Paolo Don&agrave;": [
    {
      "title": "Tabnav",
      "author": "First up, Paolo Don&agrave;",
      "author_link": "First up, http://paolodona.blogspot.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "april"
    }
  ],
  "Following that we'll have a REST discussion, chaired by Jonathan Leighton": [
    {
      "title": "REST Discussion",
      "author": "Following that we'll have a REST discussion, chaired by Jonathan Leighton",
      "author_link": "Following that we'll have a REST discussion, chaired by http://turnipspatch.com/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "april"
    }
  ],
  "If we have enough time, we may do another installment of code-review at some point in the evening.  At our last meeting": [
    {
      "title": "Misc.",
      "author": "If we have enough time, we may do another installment of code-review at some point in the evening.  At our last meeting",
      "author_link": "If we have enough time, we may do another installment of code-review at some point in the evening.  At our http://lrug.org/meetings/2007/02/19/march-2007-meeting/",
      "coverage": null,
      "summary": "",
      "year": "2007",
      "month": "april"
    }
  ],
  "Tom Ward will encourage us to _Do Bad Things with Capistrano_, telling us what Capistrano": [
    {
      "title": "Bad Things With Capistrano",
      "author": "Tom Ward will encourage us to _Do Bad Things with Capistrano_, telling us what Capistrano",
      "author_link": "Tom Ward will encourage us to _Do Bad Things with Capistrano_, telling us what http://manuals.rubyonrails.com/read/book/17",
      "coverage": null,
      "summary": "",
      "year": "2006",
      "month": "november"
    }
  ],
  "We'll kick off with a quick review of activity of interest to the Ruby community - including brief impressions from Rob McKinnon's": [
    {
      "title": "Misc.",
      "author": "We'll kick off with a quick review of activity of interest to the Ruby community - including brief impressions from Rob McKinnon's",
      "author_link": "We'll kick off with a quick review of activity of interest to the Ruby community - including brief impressions from http://blog.theyworkforyou.co.nz/",
      "coverage": null,
      "summary": "",
      "year": "2006",
      "month": "november"
    }
  ]
}